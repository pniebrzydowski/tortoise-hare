{"version":3,"sources":["components/SiteHeader/SiteHeader.tsx","design/globalStyle.tsx","dummyData/races.ts","design/theme.ts","pages/HomePage.tsx","pages/LoginPage.tsx","dummyData/results.ts","utils/date.ts","components/races/RaceDetail/RaceDetail.tsx","dummyData/runners.ts","components/ui/Table/Table.ts","components/Results/Results.tsx","components/races/RaceResults/RaceResults.tsx","components/races/UpcomingRunners/UpcomingRunners.tsx","pages/RaceDetailPage.tsx","components/runners/RunnerDetail/RunnerDetail.tsx","components/runners/RunnerResults/RunnerResults.tsx","components/runners/UpcomingRaces/UpcomingRaces.tsx","pages/RunnerDetailPage.tsx","components/ui/Input/Input.ts","components/form/FieldWrapper.tsx","components/form/fields/Datepicker/Datepicker.tsx","components/form/fields/Number/Number.tsx","components/form/fields/Select/Select.tsx","components/form/fields/Text/Text.tsx","components/form/fields/Textarea/Textarea.tsx","components/ui/Button/Button.ts","components/races/NewRace/NewRace.tsx","components/ui/ListingItem/ListingItem.tsx","components/races/RaceList/RaceList.tsx","dummyData/series.ts","components/series/SeriesDetail/SeriesDetail.tsx","pages/SeriesDetailPage.tsx","components/series/NewSeries/NewSeries.tsx","components/series/SeriesList/SeriesList.tsx","pages/SeriesListPage.tsx","routing/routes.ts","App.tsx","index.tsx"],"names":["StyledHeader","styled","props","theme","colors","dark","spacing","medium","StyledLink","Link","xLight","SiteHeader","to","DistanceUnit","GlobalStyle","createGlobalStyle","xDark","secondary","primary","tertiary","error","light","borders","radius","style","xSmall","small","large","xLarge","HomePage","LoginPage","race1results","id","raceId","runnerId","predictedTime","actualTime","points","race2results","allResults","series1Races","seriesId","name","startTime","distance","unit","km","description","isFinished","results","series2Races","mi","allRaces","getRaceById","find","element","DATABASE_DATETIME_FORMAT","DEFAULT_DATETIME_FORMAT","DEFAULT_DATETIMEPICKER_FORMAT","getFutureDate","value","dayjs","startOf","add","format","formatDate","date","formatTime","timeInSeconds","hours","Math","floor","minutes","seconds","time","push","join","StyledSection","StyledDatesHeader","StyledDescription","RaceDetail","race","allRunners","getRunnerById","StyledTable","Results","title","columns","children","map","column","key","RaceResults","sortedResults","sort","a","b","result","getRunnerName","UpcomingRunners","RaceDetailPage","useParams","RunnerDetail","runner","RunnerResults","getRaceName","getRaceStart","UpcomingRaces","startA","startB","valueOf","sortByDate","RunnerDetailPage","filter","getResultsForRunner","finished","upcoming","length","inputCss","css","StyledSelect","StyledInput","StyledTextarea","StyledContainer","StyledLabel","StyledError","FieldWrapper","fieldId","label","htmlFor","Datepicker","formName","fieldName","defaultValue","required","includeTime","as","controllerProps","rest","selected","Date","dateFormat","customInput","showTimeSelect","rules","onChange","getDateString","Number","min","max","type","step","e","target","abs","parseFloat","Select","options","register","useFormContext","ref","option","Text","Textarea","StyledButton","PrimaryButton","OutlineButton","StyledGridContainer","GridAreaName","GridAreaStart","GridAreaDistance","GridAreaUnit","GridAreaDesc","StyledButtonContainer","NewRace","useState","visible","setVisible","form","useForm","onClick","days","onSubmit","handleSubmit","data","console","log","errors","StyledListingLink","StyledListingItem","StyledListingInfo","ListingItem","linkUrl","linkText","info","item","RaceList","races","getRacesForSeries","allSeries","startDate","endDate","SeriesDetail","series","getSeriesById","SeriesDetailPage","GridAreaLarge","NewSeries","SeriesList","SeriesListPage","routes","HOME","LOGIN","SERIES_LIST","SERIES_DETAIL","RACE_DETAIL","RUNNER_DETAIL","StyledMain","App","path","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ba816a0f.chunk.js","sourcesContent":["import React, { FunctionComponent } from 'react';\n\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst StyledHeader = styled(\"header\")`\n  background-color: ${(props) => props.theme.colors.dark};\n  padding: ${(props) => props.theme.spacing.medium};\n`;\n\nconst StyledLink = styled(Link)`\n  color: ${(props) => props.theme.colors.xLight};\n  text-decoration: none;\n`;\n\nconst SiteHeader: FunctionComponent = () => {\n  return (\n    <StyledHeader>\n      <StyledLink to=\"/\">\n        <h1>Tortoise and Hare</h1>\n      </StyledLink>\n    </StyledHeader>\n  );\n};\n\nexport default SiteHeader;\n","import { createGlobalStyle } from 'styled-components';\n\nimport { Theme } from './theme';\n\nconst GlobalStyle = createGlobalStyle<{ theme: Theme }>`\n  * {\n    box-sizing: border-box;\n  }\n\n  html {\n    font-size: 16px;\n    line-height: 1.4;\n  }\n\n  html, body {\n    background-color: ${(props) => props.theme.colors.xLight};\n    color: ${(props) => props.theme.colors.xDark};\n    min-height: 100vh;\n    margin: 0;\n    padding: 0;\n  }\n\n  body {\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n      'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n      sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n  \n  code {\n    font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n      monospace;\n  }\n\n  h1, h2, h3, h4, h5, h6, p, ul, li {\n    padding: 0;\n    margin: 0;\n  }\n\n  h1 {\n    font-size: 2rem;\n  }\n  h2 {\n    font-size: 1.6rem;\n  }\n  h3 {\n    font-size: 1.2rem;\n  }\n  h4 {\n    font-size: 1.1rem;\n  }\n  h5 {\n    font-size: 1rem;\n  }\n  h6 {\n    font-size: 0.8rem;\n  }\n\n  td, th {\n    padding: 0;\n    text-align: left;\n    font-weight: normal;\n  }\n\n  a {\n    color: inherit\n  }\n\n  p a {\n    color: ${(props) => props.theme.colors.secondary}\n  }\n\n  ul, li {\n    list-style: none;\n  }\n`;\n\nexport default GlobalStyle;\n","import { race1results, race2results, RaceResult } from './results';\n\nexport enum DistanceUnit {\n  \"km\" = \"km\",\n  \"mi\" = \"mi\",\n}\n\nexport interface Race {\n  id: string;\n  seriesId: string;\n  name: string;\n  startTime: string;\n  distance: number;\n  unit: DistanceUnit;\n  description?: string;\n  isFinished?: boolean;\n  results?: RaceResult[];\n}\n\nconst series1Races: Race[] = [\n  {\n    id: \"1\",\n    seriesId: \"1\",\n    name: \"Stoney Creek 5k\",\n    startTime: \"2020-11-01 08:00\",\n    distance: 5,\n    unit: DistanceUnit.km,\n    description: \"This is going to be a fun race!\",\n    isFinished: true,\n    results: race1results,\n  },\n  {\n    id: \"2\",\n    seriesId: \"1\",\n    name: \"Stoney Creek 10k\",\n    startTime: \"2020-11-08 13:00\",\n    distance: 10,\n    unit: DistanceUnit.km,\n    description: \"Good luck :-)\",\n    results: race2results,\n  },\n];\n\nconst series2Races: Race[] = [\n  {\n    id: \"3\",\n    seriesId: \"2\",\n    name: \"Utica 5k\",\n    startTime: \"2020-11-01 08:00\",\n    distance: 5,\n    unit: DistanceUnit.km,\n  },\n  {\n    id: \"4\",\n    seriesId: \"2\",\n    name: \"Utica 10 mile\",\n    startTime: \"2020-11-01 13:00\",\n    distance: 10,\n    unit: DistanceUnit.mi,\n    description: \"Long one!\",\n  },\n];\n\nconst allRaces: Race[] = [...series1Races, ...series2Races];\n\nexport const getRaceById = (raceId: string): Race | undefined =>\n  allRaces.find((element) => element.id === raceId);\n\nexport const getRacesForSeries = (seriesId: string): Race[] | undefined =>\n  allRaces.filter((element) => element.seriesId === seriesId);\n\nexport default allRaces;\n","export interface Theme {\n  colors: {\n    primary: string;\n    secondary: string;\n    tertiary: string;\n    error: string;\n    xDark: string;\n    dark: string;\n    light: string;\n    xLight: string;\n  };\n  borders: {\n    radius: string;\n    style: string;\n  };\n  spacing: {\n    xSmall: string;\n    small: string;\n    medium: string;\n    large: string;\n    xLarge: string;\n  };\n}\n\nexport type ColorType = keyof Theme[\"colors\"];\n\nconst colors = {\n  primary: \"#f4e439\",\n  secondary: \"#4A5D68\",\n  tertiary: \"#87BBA2\",\n  error: \"#C14443\",\n  xDark: \"#1a1a1a\",\n  dark: \"#232B31\",\n  light: \"#D3ECDF\",\n  xLight: \"#FAFEF8\",\n};\n\nconst borders = {\n  radius: \"5px\",\n  style: `1px solid`,\n};\n\nconst spacing = {\n  xSmall: \"4px\",\n  small: \"8px\",\n  medium: \"16px\",\n  large: \"24px\",\n  xLarge: \"36px\",\n};\n\nconst theme: Theme = {\n  colors,\n  borders,\n  spacing,\n};\n\nexport default theme;\n","import React, { FunctionComponent } from 'react';\n\nimport { Link } from 'react-router-dom';\n\nconst HomePage: FunctionComponent = () => {\n  return (\n    <>\n      <h2>What is it?</h2>\n      <Link to=\"/series\">View All Series</Link>\n    </>\n  );\n};\n\nexport default HomePage;\n","import React, { FunctionComponent } from 'react';\n\nconst LoginPage: FunctionComponent = () => {\n  return (\n    <>\n      <h2>Login</h2>\n    </>\n  );\n};\n\nexport default LoginPage;\n","export interface RaceResult {\n  id: string;\n  raceId: string;\n  runnerId: string;\n  predictedTime?: number;\n  actualTime?: number;\n  points: number;\n}\n\nexport const race1results: RaceResult[] = [\n  {\n    id: \"1\",\n    raceId: \"1\",\n    runnerId: \"1\",\n    predictedTime: 1080,\n    actualTime: 1095,\n    points: 0,\n  },\n  {\n    id: \"2\",\n    raceId: \"1\",\n    runnerId: \"2\",\n    predictedTime: 1120,\n    actualTime: 1100,\n    points: 5,\n  },\n  {\n    id: \"3\",\n    raceId: \"1\",\n    runnerId: \"3\",\n    predictedTime: 1200,\n    actualTime: 1145,\n    points: 10,\n  },\n];\n\nexport const race2results: RaceResult[] = [\n  {\n    id: \"4\",\n    raceId: \"2\",\n    runnerId: \"1\",\n    predictedTime: 1080,\n    points: 0,\n  },\n  {\n    id: \"5\",\n    raceId: \"2\",\n    runnerId: \"3\",\n    predictedTime: 1200,\n    points: 0,\n  },\n];\n\nconst allResults = [...race1results, ...race2results];\n\nexport const getResultsForRace = (raceId: string): RaceResult[] | undefined =>\n  allResults.filter((element) => element.raceId === raceId);\n\nexport const getResultsForRunner = (\n  runnerId: string\n): RaceResult[] | undefined =>\n  allResults.filter((element) => element.runnerId === runnerId);\n","import dayjs, { OpUnitType } from 'dayjs';\n\nconst DATABASE_DATE_FORMAT = \"YYYY-MM-DD\";\nconst DATABASE_TIME_FORMAT = \"HH:mm:ss\";\nconst DATABASE_DATETIME_FORMAT = `${DATABASE_DATE_FORMAT} ${DATABASE_TIME_FORMAT}`;\n\nexport const DEFAULT_DATE_FORMAT = \"MM/DD/YYYY\";\nexport const DEFAULT_DATEPICKER_FORMAT = \"MM/dd/yyyy\";\nexport const DEFAULT_DATETIME_FORMAT = `${DEFAULT_DATE_FORMAT} h:mma`;\nexport const DEFAULT_DATETIMEPICKER_FORMAT = `${DEFAULT_DATEPICKER_FORMAT} h:mma`;\n\nexport const getDateObject = (date: string): Date =>\n  new Date(dayjs(date).valueOf());\n\nexport const getDateString = (date: Date): string =>\n  dayjs(date).startOf(\"day\").format(DATABASE_DATE_FORMAT);\n\nexport const getDateTimeString = (date: Date): string =>\n  dayjs(date).format(DATABASE_DATETIME_FORMAT);\n\nexport const getToday = (): string =>\n  dayjs().startOf(\"day\").format(DATABASE_DATE_FORMAT);\n\nexport const getFutureDate = (\n  value: number = 1,\n  unit: OpUnitType = \"month\"\n): string =>\n  dayjs().startOf(\"day\").add(value, unit).format(DATABASE_DATE_FORMAT);\n\nexport const sortByDate = (a: string, b: string): number =>\n  dayjs(b).valueOf() - dayjs(a).valueOf();\n\nexport const getFutureDateWithTime = (days: number, hours: number): string =>\n  dayjs()\n    .startOf(\"day\")\n    .add(days, \"day\")\n    .add(hours, \"hour\")\n    .format(DATABASE_DATETIME_FORMAT);\n\nexport const formatDate = (\n  date: string,\n  format: string = DEFAULT_DATE_FORMAT\n): string => dayjs(date).format(format);\n\nexport const formatTime = (timeInSeconds: number): string => {\n  const hours = Math.floor(timeInSeconds / 3600);\n  const minutes = Math.floor(timeInSeconds / 60) % 60;\n  const seconds = Math.floor(timeInSeconds) % 60;\n\n  const time = [];\n  if (hours) {\n    time.push(hours < 10 ? `0${hours}` : hours);\n  }\n  time.push(minutes < 10 ? `0${minutes}` : minutes);\n  time.push(seconds < 10 ? `0${seconds}` : seconds);\n  return time.join(\":\");\n};\n","import React, { FunctionComponent } from 'react';\n\nimport styled from 'styled-components';\n\nimport { getRaceById, Race } from '../../../dummyData/races';\nimport { DEFAULT_DATETIME_FORMAT, formatDate } from '../../../utils/date';\n\ninterface Props {\n  id: string;\n}\n\nconst StyledSection = styled(\"section\")`\n  & > * + * {\n    margin: ${(props) => props.theme.spacing.small} 0;\n  }\n`;\n\nconst StyledDatesHeader = styled(\"th\")`\n  font-weight: bold;\n  padding-right: ${(props) => props.theme.spacing.medium};\n`;\n\nconst StyledDescription = styled(\"p\")`\n  color: ${(props) => props.theme.colors.secondary};\n`;\n\nconst RaceDetail: FunctionComponent<Props> = ({ id }) => {\n  const race: Race | undefined = getRaceById(id);\n\n  if (!race) {\n    return null;\n  }\n\n  return (\n    <StyledSection>\n      <header>\n        <h2>{race.name}</h2>\n      </header>\n      <table>\n        <tbody>\n          <tr>\n            <StyledDatesHeader>Start:</StyledDatesHeader>\n            <td>{formatDate(race.startTime, DEFAULT_DATETIME_FORMAT)}</td>\n          </tr>\n          <tr>\n            <StyledDatesHeader>Distance:</StyledDatesHeader>\n            <td>\n              {race.distance} {race.unit}\n            </td>\n          </tr>\n        </tbody>\n      </table>\n      {race.description && (\n        <StyledDescription>{race.description}</StyledDescription>\n      )}\n    </StyledSection>\n  );\n};\n\nexport default RaceDetail;\n","export interface Runner {\n  id: string;\n  name: string;\n}\n\nexport const allRunners: Runner[] = [\n  {\n    id: \"1\",\n    name: \"Leon Niebrzydowski\",\n  },\n  {\n    id: \"2\",\n    name: \"Michael Niebrzydowski\",\n  },\n  {\n    id: \"3\",\n    name: \"Vicki Niebrzydowski\",\n  },\n];\n\nexport const getRunnerById = (runnerId: string): Runner | undefined =>\n  allRunners.find((element) => element.id === runnerId);\n","import styled from 'styled-components';\n\nexport const StyledTable = styled(\"table\")`\n  border-spacing: 0;\n  border-radius: ${(props) => props.theme.borders.radius};\n  width: 100%;\n  margin-top: ${(props) => props.theme.spacing.small};\n\n  th,\n  td {\n    padding: ${(props) =>\n      `${props.theme.spacing.xSmall} ${props.theme.spacing.small}`};\n    border-top: ${(props) =>\n      `${props.theme.borders.style} ${props.theme.colors.light}`};\n    border-right: ${(props) =>\n      `${props.theme.borders.style} ${props.theme.colors.light}`};\n  }\n  tr {\n    th:first-of-type,\n    td:first-of-type {\n      border-left: ${(props) =>\n        `${props.theme.borders.style} ${props.theme.colors.light}`};\n    }\n    &:nth-child(even) td {\n      background: #fff;\n    }\n    &:last-of-type {\n      td {\n        border-bottom: ${(props) =>\n          `${props.theme.borders.style} ${props.theme.colors.light}`};\n\n        :first-of-type {\n          border-bottom-left-radius: ${(props) => props.theme.borders.radius};\n        }\n        :last-of-type {\n          border-bottom-right-radius: ${(props) => props.theme.borders.radius};\n        }\n      }\n    }\n  }\n\n  th {\n    background: ${(props) => props.theme.colors.tertiary};\n    font-weight: bold;\n\n    :first-of-type {\n      border-top-left-radius: ${(props) => props.theme.borders.radius};\n    }\n    :last-of-type {\n      border-top-right-radius: ${(props) => props.theme.borders.radius};\n    }\n  }\n`;\n","import React, { FunctionComponent } from 'react';\n\nimport { StyledTable } from '../ui/Table';\n\ninterface Props {\n  title: string;\n  columns: string[];\n}\n\nconst Results: FunctionComponent<Props> = ({ title, columns, children }) => (\n  <section>\n    <h2>{title}</h2>\n    <StyledTable>\n      <thead>\n        <tr>\n          {columns.map((column) => (\n            <th key={column}>{column}</th>\n          ))}\n        </tr>\n      </thead>\n      <tbody>{children}</tbody>\n    </StyledTable>\n  </section>\n);\n\nexport default Results;\n","import React, { FunctionComponent } from 'react';\n\nimport { Link } from 'react-router-dom';\n\nimport { RaceResult } from '../../../dummyData/results';\nimport { getRunnerById } from '../../../dummyData/runners';\nimport { formatTime } from '../../../utils/date';\nimport Results from '../../Results';\n\ninterface Props {\n  results: RaceResult[];\n}\n\nconst getRunnerName = (runnerId: string) => getRunnerById(runnerId)?.name;\n\nconst RaceResults: FunctionComponent<Props> = ({ results }) => {\n  const sortedResults = results.sort((a: RaceResult, b: RaceResult) => {\n    return b.points - a.points;\n  });\n\n  return (\n    <Results title=\"Results\" columns={[\"Name\", \"Time\", \"Points\"]}>\n      {sortedResults.map((result) => (\n        <tr key={result.id}>\n          <td>\n            <Link to={`/runner/${result.runnerId}`}>\n              {getRunnerName(result.runnerId)}\n            </Link>\n          </td>\n          <td>{result.actualTime && formatTime(result.actualTime)}</td>\n          <td>{result.points}</td>\n        </tr>\n      ))}\n    </Results>\n  );\n};\n\nexport default RaceResults;\n","import React, { FunctionComponent } from 'react';\n\nimport { Link } from 'react-router-dom';\n\nimport { RaceResult } from '../../../dummyData/results';\nimport { getRunnerById } from '../../../dummyData/runners';\nimport { formatTime } from '../../../utils/date';\nimport Results from '../../Results';\n\ninterface Props {\n  results: RaceResult[];\n}\n\nconst getRunnerName = (runnerId: string) => getRunnerById(runnerId)?.name;\n\nconst UpcomingRunners: FunctionComponent<Props> = ({ results }) => {\n  const sortedResults = results.sort((a: RaceResult, b: RaceResult) => {\n    if (!a.predictedTime || !b.predictedTime) {\n      return 0;\n    }\n    return b.predictedTime - a.predictedTime;\n  });\n\n  return (\n    <Results title=\"Runners\" columns={[\"Name\", \"Predicted Time\"]}>\n      {sortedResults.map((result) => (\n        <tr key={result.id}>\n          <td>\n            <Link to={`/runner/${result.runnerId}`}>\n              {getRunnerName(result.runnerId)}\n            </Link>\n          </td>\n          <td>{result.predictedTime && formatTime(result.predictedTime)}</td>\n        </tr>\n      ))}\n    </Results>\n  );\n};\n\nexport default UpcomingRunners;\n","import React, { FunctionComponent } from 'react';\n\nimport { Link, useParams } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport RaceDetail from '../components/races/RaceDetail';\nimport RaceResults from '../components/races/RaceResults';\nimport UpcomingRunners from '../components/races/UpcomingRunners';\nimport { getRaceById, Race } from '../dummyData/races';\n\nconst StyledLink = styled(Link)`\n  padding-top: ${(props) => props.theme.spacing.small};\n  padding-bottom: ${(props) => props.theme.spacing.small};\n  text-decoration: none;\n  display: block;\n  margin-bottom: ${(props) => props.theme.spacing.small};\n`;\n\nconst RaceDetailPage: FunctionComponent = () => {\n  const { raceId } = useParams();\n  if (!raceId) {\n    return null;\n  }\n\n  const race: Race | undefined = getRaceById(raceId);\n  if (!race) {\n    return null;\n  }\n\n  return (\n    <>\n      <nav>\n        <StyledLink to={`/series/${race.seriesId}`}>\n          &lt; Back to Series\n        </StyledLink>\n      </nav>\n\n      <RaceDetail id={raceId} />\n      {race.results &&\n        (race.isFinished ? (\n          <RaceResults results={race.results} />\n        ) : (\n          <UpcomingRunners results={race.results} />\n        ))}\n    </>\n  );\n};\n\nexport default RaceDetailPage;\n","import React, { FunctionComponent } from 'react';\n\nimport { getRunnerById } from '../../../dummyData/runners';\n\ninterface Props {\n  id: string;\n}\n\nconst RunnerDetail: FunctionComponent<Props> = ({ id }) => {\n  const runner = getRunnerById(id);\n\n  if (!runner) {\n    return null;\n  }\n\n  return (\n    <header>\n      <h2>{runner.name}</h2>\n    </header>\n  );\n};\n\nexport default RunnerDetail;\n","import React, { FunctionComponent } from 'react';\n\nimport { Link } from 'react-router-dom';\n\nimport { getRaceById } from '../../../dummyData/races';\nimport { RaceResult } from '../../../dummyData/results';\nimport { formatTime } from '../../../utils/date';\nimport Results from '../../Results';\n\ninterface Props {\n  results: RaceResult[];\n}\n\nconst getRaceName = (raceId: string) => getRaceById(raceId)?.name;\n\nconst RunnerResults: FunctionComponent<Props> = ({ results }) => {\n  const sortedResults = results.sort((a: RaceResult, b: RaceResult) => {\n    return b.points - a.points;\n  });\n\n  return (\n    <Results title=\"Previous Results\" columns={[\"Race\", \"Time\", \"Points\"]}>\n      {sortedResults.map((result) => (\n        <tr key={result.id}>\n          <td>\n            <Link to={`/race/${result.raceId}`}>\n              {getRaceName(result.raceId)}\n            </Link>\n          </td>\n          <td>{result.actualTime && formatTime(result.actualTime)}</td>\n          <td>{result.points}</td>\n        </tr>\n      ))}\n    </Results>\n  );\n};\n\nexport default RunnerResults;\n","import React, { FunctionComponent } from 'react';\n\nimport { Link } from 'react-router-dom';\n\nimport { getRaceById } from '../../../dummyData/races';\nimport { RaceResult } from '../../../dummyData/results';\nimport { formatTime, sortByDate } from '../../../utils/date';\nimport Results from '../../Results';\n\ninterface Props {\n  results: RaceResult[];\n}\n\nconst getRaceName = (raceId: string): string | undefined =>\n  getRaceById(raceId)?.name;\nconst getRaceStart = (raceId: string): string | undefined =>\n  getRaceById(raceId)?.startTime;\n\nconst UpcomingRaces: FunctionComponent<Props> = ({ results }) => {\n  const sortedResults = results.sort((a: RaceResult, b: RaceResult) => {\n    const startA = getRaceStart(a.raceId);\n    const startB = getRaceStart(b.raceId);\n    if (!startA || !startB) {\n      return 0;\n    }\n    return sortByDate(startA, startB);\n  });\n\n  return (\n    <Results\n      title=\"Upcoming Races\"\n      columns={[\"Race\", \"Start Time\", \"Predicted Time\"]}\n    >\n      {sortedResults.map((result) => (\n        <tr key={result.id}>\n          <td>\n            <Link to={`/race/${result.raceId}`}>\n              {getRaceName(result.raceId)}\n            </Link>\n          </td>\n          <td>{getRaceStart(result.raceId)}</td>\n          <td>{result.predictedTime && formatTime(result.predictedTime)}</td>\n        </tr>\n      ))}\n    </Results>\n  );\n};\n\nexport default UpcomingRaces;\n","import React, { FunctionComponent } from 'react';\n\nimport { useParams } from 'react-router-dom';\n\nimport RunnerDetail from '../components/runners/RunnerDetail';\nimport RunnerResults from '../components/runners/RunnerResults';\nimport UpcomingRaces from '../components/runners/UpcomingRaces';\nimport { getResultsForRunner, RaceResult } from '../dummyData/results';\n\nconst RunnerDetailPage: FunctionComponent = () => {\n  const { runnerId } = useParams();\n\n  if (!runnerId) {\n    return null;\n  }\n\n  const results: RaceResult[] = getResultsForRunner(runnerId) || [];\n  const finished = results.filter((result) => !!result.actualTime);\n  const upcoming = results.filter((result) => !result.actualTime);\n\n  return (\n    <>\n      <RunnerDetail id={runnerId} />\n      {upcoming.length > 0 && <UpcomingRaces results={upcoming} />}\n      {finished.length > 0 && <RunnerResults results={finished} />}\n    </>\n  );\n};\n\nexport default RunnerDetailPage;\n","import styled, { css } from 'styled-components';\n\nconst inputCss = css`\n  appearance: none;\n  background: #fff;\n  border-radius: ${(props) => props.theme.borders.radius};\n  padding: ${(props) => props.theme.spacing.medium};\n  border: ${(props) =>\n    `${props.theme.borders.style} ${props.theme.colors.light}`};\n  font-size: 1rem;\n  width: 100%;\n\n  &:focus {\n    outline-color: ${(props) => props.theme.colors.tertiary};\n  }\n`;\n\nexport const StyledSelect = styled(\"select\")`\n  ${inputCss}\n`;\n\nexport const StyledInput = styled(\"input\")`\n  ${inputCss}\n`;\n\nexport const StyledTextarea = styled(\"textarea\")`\n  ${inputCss}\n`;\n","import React, { FunctionComponent } from 'react';\n\nimport styled from 'styled-components';\n\ninterface Props {\n  fieldId: string;\n  label?: string;\n  error?: string;\n}\n\nconst StyledContainer = styled(\"div\")`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst StyledLabel = styled(\"label\")`\n  font-size: 0.8rem;\n  font-weight: bold;\n  padding: ${(props) =>\n    `${props.theme.spacing.xSmall} ${props.theme.spacing.medium}`};\n`;\n\nconst StyledError = styled(StyledLabel)`\n  color: ${(props) => props.theme.colors.error};\n`;\n\nconst FieldWrapper: FunctionComponent<Props> = ({\n  fieldId,\n  label,\n  error,\n  children,\n}) => {\n  return (\n    <StyledContainer>\n      {label && <StyledLabel htmlFor={fieldId}>{label}</StyledLabel>}\n      {children}\n      {error && <StyledError>{error}</StyledError>}\n    </StyledContainer>\n  );\n};\n\nexport default FieldWrapper;\n","import React, { FunctionComponent } from 'react';\n\nimport DatePicker from 'react-datepicker';\nimport { Controller } from 'react-hook-form';\n\nimport {\n  DEFAULT_DATEPICKER_FORMAT,\n  DEFAULT_DATETIMEPICKER_FORMAT,\n  getDateObject,\n  getDateString,\n  getDateTimeString\n} from '../../../../utils/date';\nimport { StyledInput } from '../../../ui/Input';\nimport FieldWrapper from '../../FieldWrapper';\n\nimport 'react-datepicker/dist/react-datepicker.css';\n\ninterface Props {\n  formName: string;\n  fieldName: string;\n  label?: string;\n  defaultValue?: string;\n  error?: string;\n  required?: boolean;\n  includeTime?: boolean;\n}\n\nconst Datepicker: FunctionComponent<Props> = ({\n  formName,\n  fieldName,\n  label,\n  defaultValue,\n  error,\n  required,\n  includeTime,\n}) => {\n  const fieldId = `${formName}_${fieldName}`;\n\n  return (\n    <FieldWrapper fieldId={fieldId} label={label} error={error}>\n      <Controller\n        as={(controllerProps) => {\n          const { value, defaultValue, ...rest } = controllerProps;\n          return (\n            <DatePicker\n              selected={getDateObject(value)}\n              dateFormat={\n                includeTime\n                  ? DEFAULT_DATETIMEPICKER_FORMAT\n                  : DEFAULT_DATEPICKER_FORMAT\n              }\n              customInput={<StyledInput />}\n              showTimeSelect={includeTime}\n              {...rest}\n            />\n          );\n        }}\n        name={fieldName}\n        id={`${formName}_${fieldName}`}\n        defaultValue={defaultValue}\n        rules={{ required }}\n        onChange={([selected]) =>\n          includeTime ? getDateTimeString(selected) : getDateString(selected)\n        }\n      />\n    </FieldWrapper>\n  );\n};\n\nexport default Datepicker;\n","import React, { FunctionComponent } from 'react';\n\nimport { Controller } from 'react-hook-form';\n\nimport { StyledInput } from '../../../ui/Input';\nimport FieldWrapper from '../../FieldWrapper';\n\ninterface Props {\n  formName: string;\n  fieldName: string;\n  label?: string;\n  type?: string;\n  min?: number;\n  max?: number;\n  defaultValue?: number;\n  error?: string;\n  required?: boolean;\n}\n\nconst Number: FunctionComponent<Props> = ({\n  formName,\n  fieldName,\n  label,\n  min,\n  max,\n  defaultValue,\n  error,\n  required,\n}) => {\n  const fieldId = `${formName}_${fieldName}`;\n\n  return (\n    <FieldWrapper fieldId={fieldId} label={label} error={error}>\n      <Controller\n        as={StyledInput}\n        type=\"number\"\n        step=\"0.1\"\n        id={fieldId}\n        min={min}\n        max={max}\n        name={fieldName}\n        defaultValue={defaultValue}\n        rules={{ required }}\n        onChange={([e]) =>\n          !e.target.value ? \"\" : Math.abs(parseFloat(e.target.value))\n        }\n      />\n    </FieldWrapper>\n  );\n};\n\nexport default Number;\n","import React, { FunctionComponent } from 'react';\n\nimport { useFormContext } from 'react-hook-form';\n\nimport { StyledSelect } from '../../../ui/Input';\nimport FieldWrapper from '../../FieldWrapper';\n\nexport interface SelectOption {\n  label?: string;\n  value: string;\n}\n\ninterface Props {\n  formName: string;\n  fieldName: string;\n  label?: string;\n  options: SelectOption[];\n  defaultValue?: string;\n  error?: string;\n  required?: boolean;\n}\n\nconst Select: FunctionComponent<Props> = ({\n  formName,\n  fieldName,\n  label,\n  options,\n  defaultValue,\n  error,\n  required,\n}) => {\n  const { register } = useFormContext();\n  const fieldId = `${formName}_${fieldName}`;\n\n  return (\n    <FieldWrapper fieldId={fieldId} label={label} error={error}>\n      <StyledSelect\n        id={fieldId}\n        name={fieldName}\n        defaultValue={defaultValue}\n        ref={register({ required })}\n      >\n        {options.map((option) => (\n          <option key={option.value} value={option.value || option.label}>\n            {option.value}\n          </option>\n        ))}\n      </StyledSelect>\n    </FieldWrapper>\n  );\n};\n\nexport default Select;\n","import React, { FunctionComponent } from 'react';\n\nimport { useFormContext } from 'react-hook-form';\n\nimport { StyledInput } from '../../../ui/Input';\nimport FieldWrapper from '../../FieldWrapper';\n\ninterface Props {\n  formName: string;\n  fieldName: string;\n  label?: string;\n  defaultValue?: string;\n  error?: string;\n  required?: boolean;\n}\n\nconst Text: FunctionComponent<Props> = ({\n  formName,\n  fieldName,\n  label,\n  defaultValue,\n  error,\n  required,\n}) => {\n  const { register } = useFormContext();\n  const fieldId = `${formName}_${fieldName}`;\n\n  return (\n    <FieldWrapper fieldId={fieldId} label={label} error={error}>\n      <StyledInput\n        type=\"text\"\n        id={fieldId}\n        name={fieldName}\n        defaultValue={defaultValue}\n        ref={register({ required })}\n      />\n    </FieldWrapper>\n  );\n};\n\nexport default Text;\n","import React, { FunctionComponent } from 'react';\n\nimport { useFormContext } from 'react-hook-form';\n\nimport { StyledTextarea } from '../../../ui/Input';\nimport FieldWrapper from '../../FieldWrapper';\n\ninterface Props {\n  formName: string;\n  fieldName: string;\n  label?: string;\n  defaultValue?: string;\n  error?: string;\n  required?: boolean;\n}\n\nconst Textarea: FunctionComponent<Props> = ({\n  formName,\n  fieldName,\n  label,\n  defaultValue,\n  error,\n  required,\n}) => {\n  const { register } = useFormContext();\n  const fieldId = `${formName}_${fieldName}`;\n\n  return (\n    <FieldWrapper fieldId={fieldId} label={label} error={error}>\n      <StyledTextarea\n        id={fieldId}\n        name={fieldName}\n        defaultValue={defaultValue}\n        ref={register({ required })}\n      />\n    </FieldWrapper>\n  );\n};\n\nexport default Textarea;\n","import styled from 'styled-components';\n\nconst StyledButton = styled(\"button\")`\n  cursor: pointer;\n  appearance: none;\n  background: none;\n  border: none;\n  font-size: 1rem;\n  padding: ${(props) =>\n    `${props.theme.spacing.small} ${props.theme.spacing.medium}`};\n  border-radius: ${(props) => props.theme.borders.radius};\n  border: ${(props) => props.theme.borders.style};\n  border-color: transparent;\n`;\n\nexport const PrimaryButton = styled(StyledButton)`\n  background: ${(props) => props.theme.colors.primary};\n  color: ${(props) => props.theme.colors.xDark};\n`;\n\nexport const OutlineButton = styled(StyledButton)`\n  border: ${(props) => props.theme.borders.style};\n  border-color: ${(props) => props.theme.colors.dark};\n  color: ${(props) => props.theme.colors.dark};\n`;\n","import React, { FunctionComponent, useState } from 'react';\n\nimport { FormContext, useForm } from 'react-hook-form';\nimport styled from 'styled-components';\n\nimport { DistanceUnit, Race } from '../../../dummyData/races';\nimport { getFutureDateWithTime } from '../../../utils/date';\nimport Datepicker from '../../form/fields/Datepicker';\nimport Number from '../../form/fields/Number';\nimport Select from '../../form/fields/Select';\nimport Text from '../../form/fields/Text';\nimport Textarea from '../../form/fields/Textarea';\nimport { OutlineButton, PrimaryButton } from '../../ui/Button';\n\nimport 'react-datepicker/dist/react-datepicker.css';\n\ntype FormData = Partial<Omit<Race, \"id\">>;\n\ninterface Props {\n  seriesId: string;\n}\n\nconst StyledGridContainer = styled(\"div\")`\n  display: grid;\n  grid-gap: ${(props) => props.theme.spacing.medium};\n  grid-template-areas:\n    \"name name\"\n    \"start start\"\n    \"distance unit\"\n    \"desc desc\";\n  grid-template-columns: 1fr 1fr;\n\n  @media screen and (min-width: 480px) {\n    grid-template-areas:\n      \"name name name name\"\n      \"start start distance unit\"\n      \"desc desc desc desc\";\n    grid-template-columns: 1fr 1fr 1fr 1fr;\n  }\n\n  @media screen and (min-width: 800px) {\n    grid-template-areas:\n      \"name name start start\"\n      \"desc desc distance unit\";\n  }\n`;\n\nconst GridAreaName = styled(\"div\")`\n  grid-area: name;\n`;\nconst GridAreaStart = styled(\"div\")`\n  grid-area: start;\n`;\nconst GridAreaDistance = styled(\"div\")`\n  grid-area: distance;\n`;\nconst GridAreaUnit = styled(\"div\")`\n  max-width: 150px;\n  grid-area: unit;\n`;\nconst GridAreaDesc = styled(\"div\")`\n  grid-area: desc;\n`;\n\nconst StyledButtonContainer = styled(\"div\")`\n  display: flex;\n  justify-content: flex-end;\n  margin-top: ${(props) => props.theme.spacing.medium};\n\n  button + button {\n    margin-left: ${(props) => props.theme.spacing.medium};\n  }\n`;\n\nconst NewRace: FunctionComponent<Props> = ({ seriesId }) => {\n  const [visible, setVisible] = useState(false);\n  const form = useForm();\n\n  if (!visible) {\n    return (\n      <PrimaryButton onClick={() => setVisible(true)}>\n        Add new race\n      </PrimaryButton>\n    );\n  }\n\n  const onSubmit = (data: FormData) => {\n    console.log(data);\n  };\n\n  return (\n    <FormContext {...form}>\n      <form onSubmit={form.handleSubmit(onSubmit)}>\n        <input\n          type=\"hidden\"\n          id=\"newRace_seriesId\"\n          name=\"seriesId\"\n          value={seriesId}\n          ref={form.register({ required: true })}\n        />\n        <StyledGridContainer>\n          <GridAreaName>\n            <Text\n              formName=\"newRace\"\n              fieldName=\"name\"\n              label=\"Race Name\"\n              required\n              error={form.errors.name && \"Please enter a name\"}\n            />\n          </GridAreaName>\n\n          <GridAreaStart>\n            <Datepicker\n              formName=\"newRace\"\n              fieldName=\"startTime\"\n              label=\"Start Time\"\n              defaultValue={getFutureDateWithTime(7, 8)}\n              required\n              error={form.errors.startTime && \"Please enter a start time\"}\n              includeTime\n            />\n          </GridAreaStart>\n\n          <GridAreaDistance>\n            <Number\n              min={0}\n              formName=\"newRace\"\n              fieldName=\"distance\"\n              label=\"Distance\"\n              defaultValue={5}\n              required\n              error={form.errors.distance && \"Please enter a distance\"}\n            />\n          </GridAreaDistance>\n\n          <GridAreaUnit>\n            <Select\n              formName=\"newRace\"\n              fieldName=\"unit\"\n              label=\"Unit\"\n              defaultValue={DistanceUnit.km}\n              options={[{ value: \"km\" }, { value: \"mi\" }]}\n              error={form.errors.unit && \"Please enter a unit\"}\n            />\n          </GridAreaUnit>\n\n          <GridAreaDesc>\n            <Textarea\n              formName=\"newRace\"\n              fieldName=\"description\"\n              label=\"Description\"\n            />\n          </GridAreaDesc>\n        </StyledGridContainer>\n\n        <StyledButtonContainer>\n          <PrimaryButton type=\"submit\">Save</PrimaryButton>\n          <OutlineButton onClick={() => setVisible(false)}>\n            Cancel\n          </OutlineButton>\n        </StyledButtonContainer>\n      </form>\n    </FormContext>\n  );\n};\n\nexport default NewRace;\n","import React, { FunctionComponent } from 'react';\n\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\ninterface Props {\n  linkUrl: string;\n  linkText?: string;\n  title: string;\n  info: string[];\n}\n\nconst StyledListingLink = styled(Link)`\n  display: flex;\n  text-decoration: none;\n  border: ${(props) =>\n    `${props.theme.borders.style} ${props.theme.colors.light}`};\n  border-radius: ${(props) => props.theme.borders.radius};\n  background: #fff;\n  padding: ${(props) => props.theme.spacing.medium};\n\n  div:first-of-type {\n    margin-right: auto;\n  }\n`;\n\nconst StyledListingItem = styled(\"li\")`\n  & + & {\n    margin-top: ${(props) => props.theme.spacing.small};\n  }\n`;\n\nconst StyledListingInfo = styled(\"ul\")`\n  color: ${(props) => props.theme.colors.secondary};\n`;\n\nconst ListingItem: FunctionComponent<Props> = ({\n  linkUrl,\n  linkText = \"Details\",\n  title,\n  info,\n}) => {\n  return (\n    <StyledListingItem>\n      <StyledListingLink to={linkUrl}>\n        <div>\n          <h3>{title}</h3>\n          <StyledListingInfo>\n            {info.map((item) => (\n              <li key={item}>{item}</li>\n            ))}\n          </StyledListingInfo>\n        </div>\n        <span>{linkText} &gt;</span>\n      </StyledListingLink>\n    </StyledListingItem>\n  );\n};\n\nexport default ListingItem;\n","import React, { FunctionComponent } from 'react';\n\nimport { getRacesForSeries, Race } from '../../../dummyData/races';\nimport { DEFAULT_DATETIME_FORMAT, formatDate } from '../../../utils/date';\nimport ListingItem from '../../ui/ListingItem';\n\ninterface Props {\n  seriesId: string;\n}\n\nconst RaceList: FunctionComponent<Props> = ({ seriesId }) => {\n  const races: Race[] | undefined = getRacesForSeries(seriesId);\n\n  if (!races) {\n    return null;\n  }\n\n  return (\n    <section>\n      <header>\n        <h2>Races</h2>\n      </header>\n      <ul>\n        {races.map((race) => (\n          <ListingItem\n            key={race.id}\n            linkUrl={`/race/${race.id}`}\n            linkText={race.results && \"Results\"}\n            title={race.name}\n            info={[\n              formatDate(race.startTime, DEFAULT_DATETIME_FORMAT),\n              `${race.distance} ${race.unit}`,\n            ]}\n          />\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nexport default RaceList;\n","export interface Series {\n  id: string;\n  name: string;\n  startDate: string;\n  endDate: string;\n  description?: string;\n}\n\nconst allSeries: Series[] = [\n  {\n    id: \"1\",\n    name: \"Winter 2020\",\n    startDate: \"2020-11-01\",\n    endDate: \"2021-02-28\",\n    description:\n      \"Welcome back after Coronavirus! We are excited to be back and out there again.\",\n  },\n  {\n    id: \"2\",\n    name: \"Spring 2021\",\n    startDate: \"2021-03-01\",\n    endDate: \"2021-05-31\",\n  },\n];\n\nexport const getSeriesById = (id: string): Series | undefined =>\n  allSeries.find((element) => element.id === id);\n\nexport default allSeries;\n","import React, { FunctionComponent } from 'react';\n\nimport styled from 'styled-components';\n\nimport { getSeriesById } from '../../../dummyData/series';\nimport { formatDate } from '../../../utils/date';\n\ninterface Props {\n  id: string;\n}\n\nconst StyledSection = styled(\"section\")`\n  & > * + * {\n    margin: ${(props) => props.theme.spacing.small} 0;\n  }\n`;\n\nconst StyledDatesHeader = styled(\"th\")`\n  font-weight: bold;\n  padding-right: ${(props) => props.theme.spacing.medium};\n`;\n\nconst StyledDescription = styled(\"p\")`\n  color: ${(props) => props.theme.colors.secondary};\n`;\n\nconst SeriesDetail: FunctionComponent<Props> = ({ id }) => {\n  const series = getSeriesById(id);\n\n  if (!series) {\n    return null;\n  }\n\n  return (\n    <StyledSection>\n      <header>\n        <h2>{series.name}</h2>\n      </header>\n      <table>\n        <tbody>\n          <tr>\n            <StyledDatesHeader>Start:</StyledDatesHeader>\n            <td>{formatDate(series.startDate)}</td>\n          </tr>\n          <tr>\n            <StyledDatesHeader>End:</StyledDatesHeader>\n            <td>{formatDate(series.endDate)}</td>\n          </tr>\n        </tbody>\n      </table>\n      {series.description && (\n        <StyledDescription>{series.description}</StyledDescription>\n      )}\n    </StyledSection>\n  );\n};\n\nexport default SeriesDetail;\n","import React, { FunctionComponent } from 'react';\n\nimport { Link, useParams } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport NewRace from '../components/races/NewRace';\nimport RaceList from '../components/races/RaceList';\nimport SeriesDetail from '../components/series/SeriesDetail';\n\nconst StyledLink = styled(Link)`\n  padding-top: ${(props) => props.theme.spacing.small};\n  padding-bottom: ${(props) => props.theme.spacing.small};\n  text-decoration: none;\n  display: block;\n  margin-bottom: ${(props) => props.theme.spacing.small};\n`;\n\nconst SeriesDetailPage: FunctionComponent = () => {\n  const { seriesId } = useParams();\n\n  if (!seriesId) {\n    return null;\n  }\n\n  return (\n    <>\n      <nav>\n        <StyledLink to=\"/series\">&lt; Back to All Series</StyledLink>\n      </nav>\n\n      <SeriesDetail id={seriesId} />\n      <RaceList seriesId={seriesId} />\n      <NewRace seriesId={seriesId} />\n    </>\n  );\n};\n\nexport default SeriesDetailPage;\n","import React, { FunctionComponent, useState } from 'react';\n\nimport { FormContext, useForm } from 'react-hook-form';\nimport styled from 'styled-components';\n\nimport { Series } from '../../../dummyData/series';\nimport { getFutureDate, getToday } from '../../../utils/date';\nimport Datepicker from '../../form/fields/Datepicker';\nimport Text from '../../form/fields/Text';\nimport Textarea from '../../form/fields/Textarea';\nimport { OutlineButton, PrimaryButton } from '../../ui/Button';\n\nimport 'react-datepicker/dist/react-datepicker.css';\n\ntype FormData = Partial<Omit<Series, \"id\">>;\n\nconst StyledGridContainer = styled(\"div\")`\n  display: grid;\n  grid-gap: ${(props) => props.theme.spacing.medium};\n  grid-template-columns: 1fr 1fr;\n\n  @media screen and (min-width: 800px) {\n    grid-template-columns: 1fr 1fr 1fr 1fr;\n  }\n`;\n\nconst GridAreaLarge = styled(\"div\")`\n  grid-column-start: 1;\n  grid-column-end: 3;\n`;\n\nconst StyledButtonContainer = styled(\"div\")`\n  display: flex;\n  justify-content: flex-end;\n  margin-top: ${(props) => props.theme.spacing.medium};\n\n  button + button {\n    margin-left: ${(props) => props.theme.spacing.medium};\n  }\n`;\n\nconst NewSeries: FunctionComponent = () => {\n  const [visible, setVisible] = useState(false);\n  const form = useForm();\n\n  if (!visible) {\n    return (\n      <PrimaryButton onClick={() => setVisible(true)}>\n        Add new series\n      </PrimaryButton>\n    );\n  }\n\n  const onSubmit = (data: FormData) => {\n    console.log(data);\n  };\n\n  return (\n    <FormContext {...form}>\n      <form onSubmit={form.handleSubmit(onSubmit)}>\n        <StyledGridContainer>\n          <GridAreaLarge>\n            <Text\n              formName=\"newSeries\"\n              fieldName=\"name\"\n              label=\"Series Name\"\n              required\n              error={form.errors.name && \"Please enter a name\"}\n            />\n          </GridAreaLarge>\n\n          <Datepicker\n            formName=\"newSeries\"\n            fieldName=\"startDate\"\n            label=\"Start Date\"\n            defaultValue={getToday()}\n            required\n            error={form.errors.startDate && \"Please enter a start date\"}\n          />\n\n          <Datepicker\n            formName=\"newSeries\"\n            fieldName=\"endDate\"\n            label=\"End Date\"\n            defaultValue={getFutureDate(3, \"month\")}\n            required\n            error={form.errors.endDate && \"Please enter a start date\"}\n          />\n\n          <GridAreaLarge>\n            <Textarea\n              formName=\"newSeries\"\n              fieldName=\"description\"\n              label=\"Description\"\n            />\n          </GridAreaLarge>\n        </StyledGridContainer>\n\n        <StyledButtonContainer>\n          <PrimaryButton type=\"submit\">Save</PrimaryButton>\n          <OutlineButton onClick={() => setVisible(false)}>\n            Cancel\n          </OutlineButton>\n        </StyledButtonContainer>\n      </form>\n    </FormContext>\n  );\n};\n\nexport default NewSeries;\n","import React, { FunctionComponent } from 'react';\n\nimport allSeries from '../../../dummyData/series';\nimport { formatDate } from '../../../utils/date';\nimport ListingItem from '../../ui/ListingItem';\n\nconst SeriesList: FunctionComponent = () => {\n  return (\n    <section>\n      <header>\n        <h2>All Series</h2>\n      </header>\n      <ul>\n        {allSeries.map((series) => (\n          <ListingItem\n            key={series.id}\n            linkUrl={`/series/${series.id}`}\n            title={series.name}\n            info={[\n              `${formatDate(series.startDate)} - ${formatDate(series.endDate)}`,\n            ]}\n          />\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nexport default SeriesList;\n","import React, { FunctionComponent } from 'react';\n\nimport NewSeries from '../components/series/NewSeries';\nimport SeriesList from '../components/series/SeriesList';\n\nconst SeriesListPage: FunctionComponent = () => {\n  return (\n    <>\n      <SeriesList />\n      <NewSeries />\n    </>\n  );\n};\n\nexport default SeriesListPage;\n","interface Routes {\n  HOME: string;\n  LOGIN: string;\n  SERIES_LIST: string;\n  SERIES_DETAIL: string;\n  RACE_DETAIL: string;\n  RUNNER_DETAIL: string;\n}\n\nconst routes: Routes = {\n  HOME: \"/\",\n  LOGIN: \"/login\",\n  SERIES_LIST: \"/series\",\n  SERIES_DETAIL: \"/series/:seriesId\",\n  RACE_DETAIL: \"/race/:raceId\",\n  RUNNER_DETAIL: \"/runner/:runnerId\",\n};\n\nexport default routes;\n","import React, { FunctionComponent } from 'react';\n\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport styled, { ThemeProvider } from 'styled-components';\n\nimport SiteHeader from './components/SiteHeader';\nimport GlobalStyles from './design/globalStyle';\nimport theme from './design/theme';\nimport Home from './pages/HomePage';\nimport Login from './pages/LoginPage';\nimport RaceDetail from './pages/RaceDetailPage';\nimport RunnerDetail from './pages/RunnerDetailPage';\nimport SeriesDetail from './pages/SeriesDetailPage';\nimport SeriesList from './pages/SeriesListPage';\nimport routes from './routing/routes';\n\nconst StyledMain = styled(\"main\")`\n  padding: ${(props) => props.theme.spacing.medium};\n\n  & > *:not(nav) + * {\n    margin-top: ${(props) => props.theme.spacing.large};\n  }\n`;\n\nconst App: FunctionComponent = () => {\n  return (\n    <ThemeProvider theme={theme}>\n      <GlobalStyles />\n      <Router>\n        <SiteHeader />\n        <StyledMain>\n          <Switch>\n            <Route path={routes.HOME} exact>\n              <Home />\n            </Route>\n            <Route path={routes.SERIES_LIST} exact>\n              <SeriesList />\n            </Route>\n            <Route path={routes.SERIES_DETAIL} exact>\n              <SeriesDetail />\n            </Route>\n            <Route path={routes.RACE_DETAIL} exact>\n              <RaceDetail />\n            </Route>\n            <Route path={routes.RUNNER_DETAIL} exact>\n              <RunnerDetail />\n            </Route>\n\n            <Route path={routes.LOGIN} exact>\n              <Login />\n            </Route>\n          </Switch>\n        </StyledMain>\n      </Router>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}