{"version":3,"sources":["components/SiteHeader/SiteHeader.tsx","design/globalStyle.tsx","design/theme.ts","pages/HomePage.tsx","pages/LoginPage.tsx","dummyData/runners.ts","components/ui/Button/Button.ts","components/races/AddVolunteer/AddVolunteer.tsx","routing/routes.ts","utils/date.ts","components/ui/Input/Input.ts","components/form/FieldWrapper.tsx","components/form/fields/Time/Time.tsx","components/ui/Table/Table.ts","components/Results/Results.tsx","components/races/EditResults/EditResults.tsx","dummyData/races.ts","dummyData/results.ts","components/races/utils.ts","components/races/NextRace/PredictedTimeForm/PredictedTimeForm.tsx","components/races/NextRace/StartTime/StartTime.tsx","components/races/NextRace/NextRace.tsx","components/races/RaceDetail/RaceDetail.tsx","components/races/RaceResults/RaceResults.tsx","components/races/RaceVolunteers/RaceVolunteers.tsx","components/races/UpcomingRunners/UpcomingRunners.tsx","pages/RaceDetailPage.tsx","components/runners/RunnerDetail/RunnerDetail.tsx","components/runners/RunnerResults/RunnerResults.tsx","components/runners/UpcomingRaces/UpcomingRaces.tsx","pages/RunnerDetailPage.tsx","components/form/fields/Datepicker/Datepicker.tsx","components/form/fields/Number/Number.tsx","components/form/fields/Select/Select.tsx","components/form/fields/Text/Text.tsx","components/form/fields/Textarea/Textarea.tsx","components/races/NewRace/NewRace.tsx","components/ui/ListingItem/ListingItem.tsx","components/races/RaceList/RaceList.tsx","dummyData/series.ts","components/series/SeriesDetail/SeriesDetail.tsx","components/series/SeriesStandings/SeriesStandings.tsx","pages/SeriesDetailPage.tsx","components/series/NewSeries/NewSeries.tsx","components/series/SeriesList/SeriesList.tsx","pages/SeriesListPage.tsx","App.tsx","index.tsx"],"names":["StyledHeader","styled","props","theme","colors","dark","spacing","medium","StyledLink","Link","xLight","SiteHeader","to","GlobalStyle","createGlobalStyle","xDark","secondary","primary","tertiary","error","light","borders","radius","style","xSmall","small","large","xLarge","HomePage","LoginPage","allVolunteers","id","name","allRunners","getRunnerName","runnerId","getRunnerById","find","element","StyledButton","PrimaryButton","OutlineButton","StyledListItem","StyledButtonContainer","AddVolunteer","raceId","possibleVolunteers","useState","visible","setVisible","selected","setSelected","isSelected","runner","map","key","onClick","filter","selectedRunner","toggleVolunteer","selectedRunners","names","alert","join","onSubmit","routes","HOME","LOGIN","SERIES_LIST","SERIES_DETAIL","RACE_DETAIL","RUNNER_DETAIL","DATABASE_DATETIME_FORMAT","DEFAULT_DATETIME_FORMAT","DEFAULT_DATETIMEPICKER_FORMAT","getToday","dayjs","startOf","format","getDateValue","date","valueOf","isDateInFuture","sortByDate","a","b","getFutureDate","value","unit","add","formatDate","formatTime","timeInSeconds","hours","Math","floor","minutes","seconds","time","push","inputCss","css","StyledSelect","StyledInput","StyledTextarea","StyledContainer","StyledLabel","StyledError","FieldWrapper","fieldId","label","children","htmlFor","Time","formName","fieldName","defaultValue","required","register","useFormContext","type","ref","pattern","StyledTable","Results","title","columns","column","DistanceUnit","FinishRace","results","form","useForm","history","useHistory","sortedResults","sort","predictedTime","backToRaceDetail","replace","handleSubmit","data","console","log","result","actualTime","errors","race1results","points","race2results","allResults","series1Races","seriesId","startTime","distance","km","description","isFinished","volunteers","series2Races","mi","allRaces","getRaceById","getRunnerResultForRace","StyledFlexBox","StyledPrimaryButton","PredictedTimeForm","onSuccess","parts","split","reverse","length","parseInt","timeStringToSeconds","submitData","StartTime","getPredictedTime","setPredictedTime","newPredictedTime","StyledSection","NextRace","raceName","registered","isRegistered","setIsRegistered","raceLink","StyledDatesHeader","StyledDescription","RaceDetail","race","RaceResults","RaceVolunteers","volunteer","UpcomingRunners","StyledNavLink","StyledVolunteersWrapper","RaceDetailPage","useParams","path","useRouteMatch","findIndex","exact","RunnerDetail","RunnerResults","getRaceName","getRaceStart","UpcomingRaces","startA","startB","raceStart","formattedDateWithTime","StyledTableWrapper","RunnerDetailPage","getResultsForRunner","finished","upcoming","nextRace","races","upcomingRaces","sortedRaces","getNextRace","flex","Datepicker","includeTime","as","controllerProps","rest","Date","dateFormat","customInput","showTimeSelect","rules","onChange","getDateString","Number","min","max","step","e","target","abs","parseFloat","Select","options","option","Text","Textarea","StyledGridContainer","GridAreaName","GridAreaStart","GridAreaDistance","GridAreaUnit","GridAreaDesc","NewRace","float","days","StyledListingLink","StyledListingItem","StyledListingInfo","ListingItem","linkUrl","linkText","info","item","RaceList","allSeries","startDate","endDate","getResultsForSeries","getRacesForSeries","forEach","concat","SeriesDetail","series","getSeriesById","SeriesStandings","standings","runnerName","standingsArray","i","getStandingsForSeries","entry","StyledFlexContainer","SeriesDetailPage","seriesRaces","pastRaces","display","GridAreaLarge","NewSeries","SeriesList","SeriesListPage","StyledMain","App","basename","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4218b752.chunk.js","sourcesContent":["import React, { FunctionComponent } from 'react';\n\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst StyledHeader = styled(\"header\")`\n  background-color: ${(props) => props.theme.colors.dark};\n  padding: ${(props) => props.theme.spacing.medium};\n`;\n\nconst StyledLink = styled(Link)`\n  color: ${(props) => props.theme.colors.xLight};\n  text-decoration: none;\n`;\n\nconst SiteHeader: FunctionComponent = () => {\n  return (\n    <StyledHeader>\n      <StyledLink to=\"/\">\n        <h1>Tortoise and Hare</h1>\n      </StyledLink>\n    </StyledHeader>\n  );\n};\n\nexport default SiteHeader;\n","import { createGlobalStyle } from 'styled-components';\n\nimport { Theme } from './theme';\n\nconst GlobalStyle = createGlobalStyle<{ theme: Theme }>`\n  * {\n    box-sizing: border-box;\n  }\n\n  html {\n    font-size: 16px;\n    line-height: 1.4;\n  }\n\n  html, body {\n    background-color: ${(props) => props.theme.colors.xLight};\n    color: ${(props) => props.theme.colors.xDark};\n    min-height: 100vh;\n    margin: 0;\n    padding: 0;\n  }\n\n  body {\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n      'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n      sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n  \n  code {\n    font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n      monospace;\n  }\n\n  h1, h2, h3, h4, h5, h6, p, ul, li {\n    padding: 0;\n    margin: 0;\n  }\n\n  h1 {\n    font-size: 2rem;\n  }\n  h2 {\n    font-size: 1.6rem;\n  }\n  h3 {\n    font-size: 1.2rem;\n  }\n  h4 {\n    font-size: 1.1rem;\n  }\n  h5 {\n    font-size: 1rem;\n  }\n  h6 {\n    font-size: 0.8rem;\n  }\n\n  td, th {\n    padding: 0;\n    text-align: left;\n    font-weight: normal;\n  }\n\n  a {\n    color: inherit\n  }\n\n  p a {\n    color: ${(props) => props.theme.colors.secondary}\n  }\n\n  ul, li {\n    list-style: none;\n  }\n`;\n\nexport default GlobalStyle;\n","export interface Theme {\n  colors: {\n    primary: string;\n    secondary: string;\n    tertiary: string;\n    error: string;\n    xDark: string;\n    dark: string;\n    light: string;\n    xLight: string;\n  };\n  borders: {\n    radius: string;\n    style: string;\n  };\n  spacing: {\n    xSmall: string;\n    small: string;\n    medium: string;\n    large: string;\n    xLarge: string;\n  };\n}\n\nexport type ColorType = keyof Theme[\"colors\"];\n\nconst colors = {\n  primary: \"#f4e439\",\n  secondary: \"#4A5D68\",\n  tertiary: \"#87BBA2\",\n  error: \"#C14443\",\n  xDark: \"#1a1a1a\",\n  dark: \"#232B31\",\n  light: \"#D3ECDF\",\n  xLight: \"#FAFEF8\",\n};\n\nconst borders = {\n  radius: \"5px\",\n  style: `1px solid`,\n};\n\nconst spacing = {\n  xSmall: \"4px\",\n  small: \"8px\",\n  medium: \"16px\",\n  large: \"24px\",\n  xLarge: \"36px\",\n};\n\nconst theme: Theme = {\n  colors,\n  borders,\n  spacing,\n};\n\nexport default theme;\n","import React, { FunctionComponent } from 'react';\n\nimport { Link } from 'react-router-dom';\n\nconst HomePage: FunctionComponent = () => {\n  return (\n    <>\n      <h2>What is it?</h2>\n      <Link to=\"/series\">View All Series</Link>\n    </>\n  );\n};\n\nexport default HomePage;\n","import React, { FunctionComponent } from 'react';\n\nconst LoginPage: FunctionComponent = () => {\n  return (\n    <>\n      <h2>Login</h2>\n    </>\n  );\n};\n\nexport default LoginPage;\n","export interface Runner {\n  id: string;\n  name: string;\n}\n\nexport const allVolunteers: Runner[] = [\n  {\n    id: \"4\",\n    name: \"Patrick Niebrzydowski\",\n  },\n  {\n    id: \"5\",\n    name: \"Ann Niebrzydowski\",\n  },\n  {\n    id: \"6\",\n    name: \"Christina Wallner\",\n  },\n];\n\nexport const allRunners: Runner[] = [\n  {\n    id: \"1\",\n    name: \"Leon Niebrzydowski\",\n  },\n  {\n    id: \"2\",\n    name: \"Michael Niebrzydowski\",\n  },\n  {\n    id: \"3\",\n    name: \"Vicki Niebrzydowski\",\n  },\n  ...allVolunteers,\n];\n\nexport const getRunnerName = (runnerId: string) =>\n  getRunnerById(runnerId)?.name;\n\nexport const getRunnerById = (runnerId: string): Runner | undefined =>\n  allRunners.find((element) => element.id === runnerId);\n","import styled from 'styled-components';\n\nconst StyledButton = styled(\"button\")`\n  cursor: pointer;\n  appearance: none;\n  background: none;\n  border: none;\n  font-size: 1rem;\n  padding: ${(props) =>\n    `${props.theme.spacing.small} ${props.theme.spacing.medium}`};\n  border-radius: ${(props) => props.theme.borders.radius};\n  border: ${(props) => props.theme.borders.style};\n  border-color: transparent;\n`;\n\nexport const PrimaryButton = styled(StyledButton)`\n  background: ${(props) => props.theme.colors.primary};\n  color: ${(props) => props.theme.colors.xDark};\n`;\n\nexport const OutlineButton = styled(StyledButton)`\n  border: ${(props) => props.theme.borders.style};\n  border-color: ${(props) => props.theme.colors.dark};\n  color: ${(props) => props.theme.colors.dark};\n`;\n","import React, { FunctionComponent, useState } from 'react';\n\nimport styled from 'styled-components';\n\nimport { getRunnerName, Runner } from '../../../dummyData/runners';\nimport { OutlineButton, PrimaryButton } from '../../ui/Button';\n\nimport 'react-datepicker/dist/react-datepicker.css';\n\ninterface Props {\n  raceId: string;\n  possibleVolunteers: Runner[];\n}\n\nconst StyledListItem = styled(\"li\")`\n  & + & {\n    border-top: ${(props) => props.theme.borders.style};\n  }\n\n  &:nth-child(even) button {\n    background: #fff;\n  }\n  button {\n    display: flex;\n    justify-content: space-between;\n    background: none;\n    border: none;\n    cursor: pointer;\n    font-size: 1rem;\n    width: 100%;\n    padding: ${(props) =>\n      `${props.theme.spacing.small} ${props.theme.spacing.medium}`};\n  }\n`;\n\nconst StyledButtonContainer = styled(\"div\")`\n  display: flex;\n\n  button + button {\n    margin-left: ${(props) => props.theme.spacing.medium};\n  }\n`;\n\nconst AddVolunteer: FunctionComponent<Props> = ({\n  raceId,\n  possibleVolunteers,\n}) => {\n  const initialSelected: Runner[] = [];\n  const [visible, setVisible] = useState(false);\n  const [selected, setSelected] = useState(initialSelected);\n\n  const isSelected = (runnerId: string): Runner | undefined =>\n    selected.find((runner) => runner.id === runnerId);\n\n  const toggleVolunteer = (runner: Runner): void => {\n    const inArray = isSelected(runner.id);\n    if (!inArray) {\n      setSelected([...selected, runner]);\n      return;\n    }\n    setSelected(\n      selected.filter((selectedRunner) => runner.id !== selectedRunner.id)\n    );\n  };\n\n  const onSubmit = (selectedRunners: Runner[]): void => {\n    const names = selectedRunners.map((runner) => runner.name);\n    alert(`Volunteers added to race ${raceId}: ${names.join(\", \")}`);\n    setVisible(false);\n    setSelected([]);\n  };\n\n  if (!visible) {\n    return (\n      <PrimaryButton onClick={() => setVisible(true)}>\n        Add Volunteers\n      </PrimaryButton>\n    );\n  }\n\n  return (\n    <>\n      <ul>\n        {possibleVolunteers.map((runner) => {\n          const name = getRunnerName(runner.id);\n          if (!name) {\n            return null;\n          }\n\n          return (\n            <StyledListItem key={runner.id}>\n              <button onClick={() => toggleVolunteer(runner)}>\n                {name}\n                {isSelected(runner.id) && <strong>X</strong>}\n              </button>\n            </StyledListItem>\n          );\n        })}\n      </ul>\n\n      <StyledButtonContainer>\n        <PrimaryButton onClick={() => onSubmit(selected)}>\n          Add Volunteers\n        </PrimaryButton>\n        <OutlineButton\n          onClick={() => {\n            setVisible(false);\n            setSelected([]);\n          }}\n        >\n          Cancel\n        </OutlineButton>\n      </StyledButtonContainer>\n    </>\n  );\n};\n\nexport default AddVolunteer;\n","interface Routes {\n  HOME: string;\n  LOGIN: string;\n  SERIES_LIST: string;\n  SERIES_DETAIL: string;\n  RACE_DETAIL: string;\n  RUNNER_DETAIL: string;\n}\n\nexport const ROUTER_BASE = \"/tortoise-hare/\";\n\nconst routes: Routes = {\n  HOME: \"/\",\n  LOGIN: \"/login\",\n  SERIES_LIST: \"/series\",\n  SERIES_DETAIL: \"/series/:seriesId\",\n  RACE_DETAIL: \"/race/:raceId\",\n  RUNNER_DETAIL: \"/runner/:runnerId\",\n};\n\nexport default routes;\n","import dayjs, { OpUnitType } from 'dayjs';\n\nconst DATABASE_DATE_FORMAT = \"YYYY-MM-DD\";\nconst DATABASE_TIME_FORMAT = \"HH:mm:ss\";\nconst DATABASE_DATETIME_FORMAT = `${DATABASE_DATE_FORMAT} ${DATABASE_TIME_FORMAT}`;\n\nexport const DEFAULT_DATE_FORMAT = \"MM/DD/YYYY\";\nexport const DEFAULT_DATEPICKER_FORMAT = \"MM/dd/yyyy\";\nexport const DEFAULT_TIME_FORMAT = \"h:mma\";\nexport const DEFAULT_DATETIME_FORMAT = `${DEFAULT_DATE_FORMAT} ${DEFAULT_TIME_FORMAT}`;\nexport const DEFAULT_DATETIMEPICKER_FORMAT = `${DEFAULT_DATEPICKER_FORMAT} ${DEFAULT_TIME_FORMAT}`;\n\nexport const getDateObject = (date: string): Date =>\n  new Date(dayjs(date).valueOf());\n\nexport const getDateString = (date: Date): string =>\n  dayjs(date).startOf(\"day\").format(DATABASE_DATE_FORMAT);\n\nexport const getDateTimeString = (date: Date): string =>\n  dayjs(date).format(DATABASE_DATETIME_FORMAT);\n\nexport const getToday = (): string =>\n  dayjs().startOf(\"day\").format(DATABASE_DATE_FORMAT);\n\nexport const getDateValue = (date: string): number => dayjs(date).valueOf();\n\nexport const isDateInFuture = (date: string): boolean => dayjs(date) > dayjs();\n\nexport const sortByDate = (a: string, b: string): number =>\n  dayjs(a).valueOf() - dayjs(b).valueOf();\n\nexport const getFutureDate = (\n  value: number = 1,\n  unit: OpUnitType = \"month\"\n): string =>\n  dayjs().startOf(\"day\").add(value, unit).format(DATABASE_DATE_FORMAT);\n\nexport const getFutureDateWithTime = (days: number, hours: number): string =>\n  dayjs()\n    .startOf(\"day\")\n    .add(days, \"day\")\n    .add(hours, \"hour\")\n    .format(DATABASE_DATETIME_FORMAT);\n\nexport const formattedDateWithTime = (\n  date: string,\n  format: string = DEFAULT_DATETIME_FORMAT\n): string => dayjs(date).format(format);\n\nexport const formatDate = (\n  date: string,\n  format: string = DEFAULT_DATE_FORMAT\n): string => dayjs(date).format(format);\n\nexport const formatTime = (timeInSeconds: number): string => {\n  const hours = Math.floor(timeInSeconds / 3600);\n  const minutes = Math.floor(timeInSeconds / 60) % 60;\n  const seconds = Math.floor(timeInSeconds) % 60;\n\n  const time = [];\n  if (hours) {\n    time.push(hours < 10 ? `0${hours}` : hours);\n  }\n  time.push(minutes < 10 ? `0${minutes}` : minutes);\n  time.push(seconds < 10 ? `0${seconds}` : seconds);\n  return time.join(\":\");\n};\n\nexport const timeStringToSeconds = (value: string): number => {\n  const parts = value.split(\":\").reverse();\n  if (parts.length === 0) {\n    return 0;\n  }\n\n  let seconds = parseInt(parts[0], 10);\n  if (parts[1]) {\n    seconds += parseInt(parts[1], 10) * 60;\n  }\n  if (parts[2]) {\n    seconds += parseInt(parts[2], 10) * 60 * 60;\n  }\n  return seconds;\n};\n","import styled, { css } from 'styled-components';\n\nconst inputCss = css`\n  appearance: none;\n  background: #fff;\n  border-radius: ${(props) => props.theme.borders.radius};\n  padding: ${(props) => props.theme.spacing.medium};\n  border: ${(props) =>\n    `${props.theme.borders.style} ${props.theme.colors.light}`};\n  font-size: 1rem;\n  width: 100%;\n\n  &:focus {\n    outline-color: ${(props) => props.theme.colors.tertiary};\n  }\n`;\n\nexport const StyledSelect = styled(\"select\")`\n  ${inputCss}\n`;\n\nexport const StyledInput = styled(\"input\")`\n  ${inputCss}\n`;\n\nexport const StyledTextarea = styled(\"textarea\")`\n  ${inputCss}\n`;\n","import React, { FunctionComponent } from 'react';\n\nimport styled from 'styled-components';\n\ninterface Props {\n  fieldId: string;\n  label?: string;\n  error?: string;\n}\n\nconst StyledContainer = styled(\"div\")`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst StyledLabel = styled(\"label\")`\n  font-size: 0.8rem;\n  font-weight: bold;\n  padding: ${(props) =>\n    `${props.theme.spacing.xSmall} ${props.theme.spacing.medium}`};\n`;\n\nconst StyledError = styled(StyledLabel)`\n  color: ${(props) => props.theme.colors.error};\n`;\n\nconst FieldWrapper: FunctionComponent<Props> = ({\n  fieldId,\n  label,\n  error,\n  children,\n}) => {\n  return (\n    <StyledContainer>\n      {label && <StyledLabel htmlFor={fieldId}>{label}</StyledLabel>}\n      {children}\n      {error && <StyledError>{error}</StyledError>}\n    </StyledContainer>\n  );\n};\n\nexport default FieldWrapper;\n","import React, { FunctionComponent } from 'react';\n\nimport { useFormContext } from 'react-hook-form';\n\nimport { StyledInput } from '../../../ui/Input';\nimport FieldWrapper from '../../FieldWrapper';\n\ninterface Props {\n  formName: string;\n  fieldName: string;\n  defaultValue?: string;\n  label?: string;\n  error?: string;\n  required?: boolean;\n  pattern?: RegExp;\n}\n\nconst Time: FunctionComponent<Props> = ({\n  formName,\n  fieldName,\n  label,\n  error,\n  defaultValue,\n  required,\n}) => {\n  const { register } = useFormContext();\n  const fieldId = `${formName}_${fieldName}`;\n\n  return (\n    <FieldWrapper fieldId={fieldId} label={label} error={error}>\n      <StyledInput\n        type=\"text\"\n        id={fieldId}\n        name={fieldName}\n        defaultValue={defaultValue}\n        ref={register({\n          required,\n          pattern: /^\\d?\\d?:?[0-5]?[0-9]:[0-5][0-9]$/,\n        })}\n      />\n    </FieldWrapper>\n  );\n};\n\nexport default Time;\n","import styled from 'styled-components';\n\nexport const StyledTable = styled(\"table\")`\n  border-spacing: 0;\n  border-radius: ${(props) => props.theme.borders.radius};\n  width: 100%;\n  margin-top: ${(props) => props.theme.spacing.small};\n\n  th,\n  td {\n    padding: ${(props) =>\n      `${props.theme.spacing.xSmall} ${props.theme.spacing.small}`};\n    border-top: ${(props) =>\n      `${props.theme.borders.style} ${props.theme.colors.light}`};\n    border-right: ${(props) =>\n      `${props.theme.borders.style} ${props.theme.colors.light}`};\n  }\n  tr {\n    th:first-of-type,\n    td:first-of-type {\n      border-left: ${(props) =>\n        `${props.theme.borders.style} ${props.theme.colors.light}`};\n    }\n    &:nth-child(even) td {\n      background: #fff;\n    }\n    &:last-of-type {\n      td {\n        border-bottom: ${(props) =>\n          `${props.theme.borders.style} ${props.theme.colors.light}`};\n\n        :first-of-type {\n          border-bottom-left-radius: ${(props) => props.theme.borders.radius};\n        }\n        :last-of-type {\n          border-bottom-right-radius: ${(props) => props.theme.borders.radius};\n        }\n      }\n    }\n  }\n\n  th {\n    background: ${(props) => props.theme.colors.tertiary};\n    font-weight: bold;\n\n    :first-of-type {\n      border-top-left-radius: ${(props) => props.theme.borders.radius};\n    }\n    :last-of-type {\n      border-top-right-radius: ${(props) => props.theme.borders.radius};\n    }\n  }\n`;\n","import React, { FunctionComponent } from 'react';\n\nimport { StyledTable } from '../ui/Table';\n\ninterface Props {\n  title?: string;\n  columns: string[];\n}\n\nconst Results: FunctionComponent<Props> = ({ title, columns, children }) => (\n  <section>\n    {title && <h3>{title}</h3>}\n    <StyledTable>\n      <thead>\n        <tr>\n          {columns.map((column) => (\n            <th key={column}>{column}</th>\n          ))}\n        </tr>\n      </thead>\n      <tbody>{children}</tbody>\n    </StyledTable>\n  </section>\n);\n\nexport default Results;\n","import React, { FunctionComponent } from 'react';\n\nimport { FormContext, useForm } from 'react-hook-form';\nimport { Link, useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport { RaceResult } from '../../../dummyData/results';\nimport { getRunnerName } from '../../../dummyData/runners';\nimport routes from '../../../routing/routes';\nimport { formatTime } from '../../../utils/date';\nimport Time from '../../form/fields/Time';\nimport Results from '../../Results';\nimport { OutlineButton, PrimaryButton } from '../../ui/Button';\n\ninterface Props {\n  results: RaceResult[];\n  raceId: string;\n}\n\nconst StyledButtonContainer = styled(\"div\")`\n  margin-top: ${(props) => props.theme.spacing.medium};\n\n  button + button {\n    margin-left: ${(props) => props.theme.spacing.medium};\n  }\n`;\n\nconst FinishRace: FunctionComponent<Props> = ({ results, raceId }) => {\n  const form = useForm();\n  const history = useHistory();\n\n  const sortedResults = results.sort((a: RaceResult, b: RaceResult) => {\n    if (!a.predictedTime || !b.predictedTime) {\n      return 0;\n    }\n    return a.predictedTime - b.predictedTime;\n  });\n\n  const backToRaceDetail = () => {\n    history.push(routes.RACE_DETAIL.replace(\":raceId\", raceId));\n  };\n\n  const onSubmit = (data: any) => {\n    console.log(data);\n    backToRaceDetail();\n  };\n\n  return (\n    <FormContext {...form}>\n      <form onSubmit={form.handleSubmit(onSubmit)}>\n        <input\n          type=\"hidden\"\n          id=\"results_raceId\"\n          name=\"raceId\"\n          value={raceId}\n          ref={form.register({ required: true })}\n        />\n        <Results columns={[\"Name\", \"Predicted Time\", \"Actual Time\"]}>\n          {sortedResults.map((result) => (\n            <tr key={result.id}>\n              <td>\n                <Link to={`/runner/${result.runnerId}`}>\n                  {getRunnerName(result.runnerId)}\n                </Link>\n              </td>\n              <td>\n                {result.predictedTime && formatTime(result.predictedTime)}\n              </td>\n              <td>\n                <Time\n                  formName=\"results\"\n                  fieldName={`runner_${result.runnerId}`}\n                  defaultValue={formatTime(result.actualTime)}\n                  error={\n                    form.errors[`runner_${result.runnerId}`] &&\n                    \"Please enter a time\"\n                  }\n                />\n              </td>\n            </tr>\n          ))}\n        </Results>\n        <StyledButtonContainer>\n          <PrimaryButton type=\"submit\">\n            Complete Race and Calculate Points\n          </PrimaryButton>\n          <OutlineButton onClick={() => backToRaceDetail()}>\n            Cancel\n          </OutlineButton>\n        </StyledButtonContainer>\n      </form>\n    </FormContext>\n  );\n};\n\nexport default FinishRace;\n","import { race1results, race2results, RaceResult } from './results';\nimport { allVolunteers, Runner } from './runners';\n\nexport enum DistanceUnit {\n  \"km\" = \"km\",\n  \"mi\" = \"mi\",\n}\n\nexport interface Race {\n  id: string;\n  seriesId: string;\n  name: string;\n  startTime: string;\n  distance: number;\n  unit: DistanceUnit;\n  description?: string;\n  isFinished?: boolean;\n  results?: RaceResult[];\n  volunteers?: Runner[];\n}\n\nconst series1Races: Race[] = [\n  {\n    id: \"1\",\n    seriesId: \"1\",\n    name: \"Stoney Creek 5k\",\n    startTime: \"2020-11-01 08:00:00\",\n    distance: 5,\n    unit: DistanceUnit.km,\n    description: \"This is going to be a fun race!\",\n    isFinished: true,\n    results: race1results,\n    volunteers: allVolunteers,\n  },\n  {\n    id: \"2\",\n    seriesId: \"1\",\n    name: \"Stoney Creek 10k\",\n    startTime: \"2020-11-08 13:00:00\",\n    distance: 10,\n    unit: DistanceUnit.km,\n    description: \"Good luck :-)\",\n    results: race2results,\n    volunteers: [allVolunteers[0], allVolunteers[1]],\n  },\n];\n\nconst series2Races: Race[] = [\n  {\n    id: \"3\",\n    seriesId: \"2\",\n    name: \"Utica 5k\",\n    startTime: \"2021-03-23 08:00:00\",\n    distance: 5,\n    unit: DistanceUnit.km,\n  },\n  {\n    id: \"4\",\n    seriesId: \"2\",\n    name: \"Utica 10 mile\",\n    startTime: \"2021-04-01 13:00:00\",\n    distance: 10,\n    unit: DistanceUnit.mi,\n    description: \"Long one!\",\n  },\n];\n\nconst allRaces: Race[] = [...series1Races, ...series2Races];\n\nexport const getRaceById = (raceId: string): Race | undefined =>\n  allRaces.find((element) => element.id === raceId);\n\nexport const getRacesForSeries = (seriesId: string): Race[] =>\n  allRaces.filter((element) => element.seriesId === seriesId);\n\nexport default allRaces;\n","export interface RaceResult {\n  id: string;\n  raceId: string;\n  runnerId: string;\n  predictedTime: number;\n  actualTime: number;\n  points: number;\n}\n\nexport const race1results: RaceResult[] = [\n  {\n    id: \"1\",\n    raceId: \"1\",\n    runnerId: \"1\",\n    predictedTime: 1080,\n    actualTime: 1095,\n    points: 0,\n  },\n  {\n    id: \"2\",\n    raceId: \"1\",\n    runnerId: \"2\",\n    predictedTime: 1120,\n    actualTime: 1100,\n    points: 5,\n  },\n  {\n    id: \"3\",\n    raceId: \"1\",\n    runnerId: \"3\",\n    predictedTime: 1200,\n    actualTime: 1145,\n    points: 10,\n  },\n];\n\nexport const race2results: RaceResult[] = [\n  {\n    id: \"4\",\n    raceId: \"2\",\n    runnerId: \"1\",\n    predictedTime: 1080,\n    actualTime: 0,\n    points: 0,\n  },\n  {\n    id: \"5\",\n    raceId: \"2\",\n    runnerId: \"3\",\n    predictedTime: 1200,\n    actualTime: 0,\n    points: 0,\n  },\n  {\n    id: \"6\",\n    raceId: \"2\",\n    runnerId: \"4\",\n    predictedTime: 0,\n    actualTime: 0,\n    points: 0,\n  },\n];\n\nexport const allResults = [...race1results, ...race2results];\n\nexport const getResultsForRace = (raceId: string): RaceResult[] | undefined =>\n  allResults.filter((element) => element.raceId === raceId);\n\nexport const getResultsForRunner = (runnerId: string): RaceResult[] =>\n  allResults.filter((element) => element.runnerId === runnerId);\n","import allRaces, { getRaceById, Race } from '../../dummyData/races';\nimport { RaceResult } from '../../dummyData/results';\nimport { getDateValue, getToday, sortByDate } from '../../utils/date';\n\nexport const getRunnerResultForRace = (\n  runnerId: string,\n  raceId: string\n): RaceResult | undefined => {\n  const results = getRaceById(raceId)?.results;\n  if (!results) {\n    return;\n  }\n  return results.find((result) => result.runnerId === runnerId);\n};\n\nexport const getPredictedTime = (runnerId: string, raceId: string): number => {\n  return getRunnerResultForRace(runnerId, raceId)?.predictedTime || 0;\n};\n\nexport const getNextRace = (races: Race[] = allRaces): Race | undefined => {\n  const upcomingRaces = races.filter(\n    (race: Race) =>\n      !race.isFinished &&\n      getDateValue(race.startTime) > getDateValue(getToday())\n  );\n  const sortedRaces = upcomingRaces.sort((a: Race, b: Race): number =>\n    sortByDate(a.startTime, b.startTime)\n  );\n  if (!sortedRaces) {\n    return undefined;\n  }\n  return sortedRaces[0];\n};\n","import React, { FunctionComponent } from 'react';\n\nimport { FormContext, useForm } from 'react-hook-form';\nimport styled from 'styled-components';\n\nimport { timeStringToSeconds } from '../../../../utils/date';\nimport Time from '../../../form/fields/Time';\nimport { PrimaryButton } from '../../../ui/Button';\n\ninterface FormData {\n  runnerId: string;\n  raceId: string;\n  predictedTime: string;\n}\n\ninterface Props {\n  raceId: string;\n  runnerId: string;\n  onSuccess?: (newPredictedTime: number) => void;\n}\n\nconst StyledFlexBox = styled(\"div\")`\n  display: flex;\n  width: 100%;\n  align-items: flex-start;\n`;\n\nconst StyledPrimaryButton = styled(PrimaryButton)`\n  margin-left: ${(props) => props.theme.spacing.medium};\n  padding: ${(props) => props.theme.spacing.medium};\n`;\n\nconst PredictedTimeForm: FunctionComponent<Props> = ({\n  raceId,\n  runnerId,\n  onSuccess,\n}) => {\n  const form = useForm<FormData>();\n\n  const onSubmit = (data: FormData) => {\n    const timeInSeconds = timeStringToSeconds(data.predictedTime);\n    const submitData = {\n      ...data,\n      predictedTime: timeInSeconds,\n    };\n    console.log(submitData);\n\n    onSuccess && onSuccess(timeInSeconds);\n  };\n\n  return (\n    <FormContext {...form}>\n      <form onSubmit={form.handleSubmit(onSubmit)}>\n        <input\n          type=\"hidden\"\n          id=\"predictedTime_raceId\"\n          name=\"raceId\"\n          value={raceId}\n          ref={form.register({ required: true })}\n        />\n        <input\n          type=\"hidden\"\n          id=\"predictedTime_runnerId\"\n          name=\"runnerId\"\n          value={runnerId}\n          ref={form.register({ required: true })}\n        />\n        <StyledFlexBox>\n          <Time\n            formName=\"predictedTime\"\n            fieldName=\"predictedTime\"\n            required\n            error={\n              form.errors.predictedTime && \"Please enter a time (hh:mm:ss)\"\n            }\n          />\n          <StyledPrimaryButton type=\"submit\">Submit</StyledPrimaryButton>\n        </StyledFlexBox>\n      </form>\n    </FormContext>\n  );\n};\n\nexport default PredictedTimeForm;\n","import React, { FunctionComponent, useState } from 'react';\n\nimport { getRaceById } from '../../../../dummyData/races';\nimport {\n  DEFAULT_TIME_FORMAT,\n  formatDate,\n  formatTime\n} from '../../../../utils/date';\nimport { getPredictedTime } from '../../utils';\nimport PredictedTimeForm from '../PredictedTimeForm';\n\ninterface Props {\n  raceId: string;\n  runnerId: string;\n}\n\nconst StartTime: FunctionComponent<Props> = ({ raceId, runnerId }) => {\n  const [predictedTime, setPredictedTime] = useState(\n    getPredictedTime(runnerId, raceId)\n  );\n  const startTime = getRaceById(raceId)?.startTime;\n\n  return predictedTime > 0 ? (\n    <>\n      {predictedTime && (\n        <p>\n          <strong>Your predicted time: </strong>\n          {formatTime(predictedTime)}\n        </p>\n      )}\n      {startTime && (\n        <p>\n          <strong>Your start time: </strong>\n          {formatDate(startTime, DEFAULT_TIME_FORMAT)}\n        </p>\n      )}\n    </>\n  ) : (\n    <>\n      <p>You don't have any results yet, please enter your estimated time</p>\n      <PredictedTimeForm\n        raceId={raceId}\n        runnerId={runnerId}\n        onSuccess={(newPredictedTime: number) => {\n          setPredictedTime(newPredictedTime);\n        }}\n      />\n    </>\n  );\n};\n\nexport default StartTime;\n","import React, { FunctionComponent, useState } from 'react';\n\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport routes from '../../../routing/routes';\nimport { PrimaryButton } from '../../ui/Button';\nimport { getRunnerResultForRace } from '../utils';\nimport StartTime from './StartTime';\n\ninterface Props {\n  raceId: string;\n  raceName?: string;\n  runnerId?: string;\n}\n\nconst StyledSection = styled(\"section\")`\n  & > * + * {\n    margin: ${(props) => props.theme.spacing.small} 0;\n  }\n`;\n\nconst NextRace: FunctionComponent<Props> = ({ raceId, raceName, runnerId }) => {\n  const registered = runnerId\n    ? getRunnerResultForRace(runnerId, raceId)\n    : false;\n  const [isRegistered, setIsRegistered] = useState(registered);\n\n  const register = () => {\n    console.log(`Registered for race ${raceId}`);\n    setIsRegistered(true);\n  };\n\n  const raceLink = raceName ? (\n    <Link to={routes.RACE_DETAIL.replace(\":raceId\", raceId)}>{raceName}</Link>\n  ) : null;\n\n  return (\n    <StyledSection>\n      <header>\n        <h3>{raceName ? \"Next Race\" : \"Registration\"}</h3>\n      </header>\n      {isRegistered ? (\n        <>\n          <p>You are registered for {raceName ? raceLink : \"this race\"}!</p>\n          {runnerId && <StartTime raceId={raceId} runnerId={runnerId} />}\n        </>\n      ) : (\n        <>\n          {raceName && <div>{raceLink}</div>}\n          <PrimaryButton onClick={register}>Register</PrimaryButton>\n        </>\n      )}\n    </StyledSection>\n  );\n};\n\nexport default NextRace;\n","import React, { FunctionComponent } from 'react';\n\nimport styled from 'styled-components';\n\nimport { getRaceById, Race } from '../../../dummyData/races';\nimport { DEFAULT_DATETIME_FORMAT, formatDate } from '../../../utils/date';\n\ninterface Props {\n  id: string;\n}\n\nconst StyledSection = styled(\"section\")`\n  & > * + * {\n    margin: ${(props) => props.theme.spacing.small} 0;\n  }\n`;\n\nconst StyledDatesHeader = styled(\"th\")`\n  font-weight: bold;\n  padding-right: ${(props) => props.theme.spacing.medium};\n`;\n\nconst StyledDescription = styled(\"p\")`\n  color: ${(props) => props.theme.colors.secondary};\n`;\n\nconst RaceDetail: FunctionComponent<Props> = ({ id }) => {\n  const race: Race | undefined = getRaceById(id);\n\n  if (!race) {\n    return null;\n  }\n\n  return (\n    <StyledSection>\n      <header>\n        <h2>{race.name}</h2>\n      </header>\n      <table>\n        <tbody>\n          <tr>\n            <StyledDatesHeader>Start:</StyledDatesHeader>\n            <td>{formatDate(race.startTime, DEFAULT_DATETIME_FORMAT)}</td>\n          </tr>\n          <tr>\n            <StyledDatesHeader>Distance:</StyledDatesHeader>\n            <td>\n              {race.distance} {race.unit}\n            </td>\n          </tr>\n        </tbody>\n      </table>\n      {race.description && (\n        <StyledDescription>{race.description}</StyledDescription>\n      )}\n    </StyledSection>\n  );\n};\n\nexport default RaceDetail;\n","import React, { FunctionComponent } from 'react';\n\nimport { Link } from 'react-router-dom';\n\nimport { RaceResult } from '../../../dummyData/results';\nimport { getRunnerName } from '../../../dummyData/runners';\nimport { formatTime } from '../../../utils/date';\nimport Results from '../../Results';\n\ninterface Props {\n  results: RaceResult[];\n}\n\nconst RaceResults: FunctionComponent<Props> = ({ results }) => {\n  const sortedResults = results.sort((a: RaceResult, b: RaceResult) => {\n    return b.points - a.points;\n  });\n\n  return (\n    <Results title=\"Results\" columns={[\"Name\", \"Time\", \"Points\"]}>\n      {sortedResults.map((result) => (\n        <tr key={result.id}>\n          <td>\n            <Link to={`/runner/${result.runnerId}`}>\n              {getRunnerName(result.runnerId)}\n            </Link>\n          </td>\n          <td>{result.actualTime && formatTime(result.actualTime)}</td>\n          <td>{result.points}</td>\n        </tr>\n      ))}\n    </Results>\n  );\n};\n\nexport default RaceResults;\n","import React, { FunctionComponent } from 'react';\n\nimport { Link } from 'react-router-dom';\n\nimport { getRunnerName, Runner } from '../../../dummyData/runners';\nimport Results from '../../Results';\n\ninterface Props {\n  volunteers: Runner[];\n}\n\nconst RaceVolunteers: FunctionComponent<Props> = ({ volunteers }) => {\n  return (\n    <Results title=\"Volunteers\" columns={[\"Name\"]}>\n      {volunteers.map((volunteer) => (\n        <tr key={volunteer.id}>\n          <td>\n            <Link to={`/runner/${volunteer.id}`}>\n              {getRunnerName(volunteer.id)}\n            </Link>\n          </td>\n        </tr>\n      ))}\n    </Results>\n  );\n};\n\nexport default RaceVolunteers;\n","import React, { FunctionComponent } from 'react';\n\nimport { Link } from 'react-router-dom';\n\nimport { RaceResult } from '../../../dummyData/results';\nimport { getRunnerName } from '../../../dummyData/runners';\nimport { formatTime } from '../../../utils/date';\nimport Results from '../../Results';\n\ninterface Props {\n  results: RaceResult[];\n}\n\nconst UpcomingRunners: FunctionComponent<Props> = ({ results }) => {\n  const sortedResults = results.sort((a: RaceResult, b: RaceResult) => {\n    if (!a.predictedTime || !b.predictedTime) {\n      return 0;\n    }\n    return a.predictedTime - b.predictedTime;\n  });\n\n  return (\n    <Results title=\"Runners\" columns={[\"Name\", \"Predicted Time\"]}>\n      {sortedResults.map((result) => (\n        <tr key={result.id}>\n          <td>\n            <Link to={`/runner/${result.runnerId}`}>\n              {getRunnerName(result.runnerId)}\n            </Link>\n          </td>\n          <td>{result.predictedTime && formatTime(result.predictedTime)}</td>\n        </tr>\n      ))}\n    </Results>\n  );\n};\n\nexport default UpcomingRunners;\n","import React, { FunctionComponent } from 'react';\n\nimport {\n  Link,\n  Route,\n  Switch,\n  useParams,\n  useRouteMatch\n} from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport AddVolunteer from '../components/races/AddVolunteer';\nimport FinishRace from '../components/races/EditResults';\nimport NextRace from '../components/races/NextRace';\nimport RaceDetail from '../components/races/RaceDetail';\nimport RaceResults from '../components/races/RaceResults';\nimport RaceVolunteers from '../components/races/RaceVolunteers';\nimport UpcomingRunners from '../components/races/UpcomingRunners';\nimport { PrimaryButton } from '../components/ui/Button';\nimport { getRaceById, Race } from '../dummyData/races';\nimport { allRunners } from '../dummyData/runners';\nimport { isDateInFuture } from '../utils/date';\n\nconst StyledNavLink = styled(Link)`\n  padding-top: ${(props) => props.theme.spacing.small};\n  padding-bottom: ${(props) => props.theme.spacing.small};\n  text-decoration: none;\n  display: block;\n  margin-bottom: ${(props) => props.theme.spacing.small};\n`;\n\nconst StyledFlexBox = styled(\"div\")`\n  & > * + * {\n    margin-top: ${(props) => props.theme.spacing.medium};\n  }\n  @media screen and (min-width: 680px) {\n    display: flex;\n    justify-content: space-between;\n\n    & > * {\n      margin-top: 0;\n      width: 100%;\n    }\n    & > * + * {\n      margin-left: ${(props) => props.theme.spacing.xLarge};\n    }\n  }\n`;\n\nconst StyledLink = styled(Link)`\n  display: block;\n  margin-top: ${(props) => props.theme.spacing.medium};\n`;\n\nconst StyledVolunteersWrapper = styled(\"section\")`\n  flex: 1 2 auto;\n  & > * + * {\n    margin-top: ${(props) => props.theme.spacing.medium};\n  }\n`;\n\nconst RaceDetailPage: FunctionComponent = () => {\n  const { raceId } = useParams();\n  const { path } = useRouteMatch();\n\n  if (!raceId) {\n    return null;\n  }\n\n  const race: Race | undefined = getRaceById(raceId);\n  if (!race) {\n    return null;\n  }\n\n  const possibleVolunteers = allRunners.filter((runner) => {\n    const volunteerIndex = race.volunteers?.findIndex((volunteer) => {\n      return volunteer.id === runner.id;\n    });\n    return volunteerIndex === -1;\n  });\n\n  return (\n    <>\n      <nav>\n        <StyledNavLink to={`/series/${race.seriesId}`}>\n          &lt; Back to Series\n        </StyledNavLink>\n      </nav>\n\n      <StyledFlexBox>\n        <RaceDetail id={raceId} />\n        <Route path={path} exact>\n          {!race.isFinished && isDateInFuture(race.startTime) && (\n            <NextRace raceId={raceId} />\n          )}\n        </Route>\n      </StyledFlexBox>\n      {race.results &&\n        (race.isFinished ? (\n          <RaceResults results={race.results} />\n        ) : (\n          <Switch>\n            <Route path={`${path}/edit`}>\n              <FinishRace results={race.results} raceId={race.id} />\n            </Route>\n            <Route>\n              <StyledFlexBox>\n                <div>\n                  <UpcomingRunners results={race.results} />\n                  <StyledLink to={`${race.id}/edit`}>\n                    <PrimaryButton>Add results</PrimaryButton>\n                  </StyledLink>\n                </div>\n                <StyledVolunteersWrapper>\n                  {race.volunteers && (\n                    <RaceVolunteers volunteers={race.volunteers} />\n                  )}\n                  <AddVolunteer\n                    raceId={race.id}\n                    possibleVolunteers={possibleVolunteers}\n                  />\n                </StyledVolunteersWrapper>\n              </StyledFlexBox>\n            </Route>\n          </Switch>\n        ))}\n    </>\n  );\n};\n\nexport default RaceDetailPage;\n","import React, { FunctionComponent } from 'react';\n\nimport { getRunnerById } from '../../../dummyData/runners';\n\ninterface Props {\n  id: string;\n}\n\nconst RunnerDetail: FunctionComponent<Props> = ({ id }) => {\n  const runner = getRunnerById(id);\n\n  if (!runner) {\n    return null;\n  }\n\n  return (\n    <header>\n      <h2>{runner.name}</h2>\n    </header>\n  );\n};\n\nexport default RunnerDetail;\n","import React, { FunctionComponent } from 'react';\n\nimport { Link } from 'react-router-dom';\n\nimport { getRaceById } from '../../../dummyData/races';\nimport { RaceResult } from '../../../dummyData/results';\nimport { formatTime } from '../../../utils/date';\nimport Results from '../../Results';\n\ninterface Props {\n  results: RaceResult[];\n}\n\nconst getRaceName = (raceId: string) => getRaceById(raceId)?.name;\n\nconst RunnerResults: FunctionComponent<Props> = ({ results }) => {\n  const sortedResults = results.sort((a: RaceResult, b: RaceResult) => {\n    return b.points - a.points;\n  });\n\n  return (\n    <Results title=\"Previous Results\" columns={[\"Race\", \"Time\", \"Points\"]}>\n      {sortedResults.map((result) => (\n        <tr key={result.id}>\n          <td>\n            <Link to={`/race/${result.raceId}`}>\n              {getRaceName(result.raceId)}\n            </Link>\n          </td>\n          <td>{result.actualTime && formatTime(result.actualTime)}</td>\n          <td>{result.points}</td>\n        </tr>\n      ))}\n    </Results>\n  );\n};\n\nexport default RunnerResults;\n","import React, { FunctionComponent } from 'react';\n\nimport { Link } from 'react-router-dom';\n\nimport { getRaceById } from '../../../dummyData/races';\nimport { RaceResult } from '../../../dummyData/results';\nimport {\n  DEFAULT_TIME_FORMAT,\n  formatDate,\n  formattedDateWithTime,\n  formatTime,\n  sortByDate\n} from '../../../utils/date';\nimport Results from '../../Results';\n\ninterface Props {\n  results: RaceResult[];\n}\n\nconst getRaceName = (raceId: string): string | undefined =>\n  getRaceById(raceId)?.name;\nconst getRaceStart = (raceId: string): string | undefined =>\n  getRaceById(raceId)?.startTime;\n\nconst UpcomingRaces: FunctionComponent<Props> = ({ results }) => {\n  const sortedResults = results.sort((a: RaceResult, b: RaceResult) => {\n    const startA = getRaceStart(a.raceId);\n    const startB = getRaceStart(b.raceId);\n    if (!startA || !startB) {\n      return 0;\n    }\n    return sortByDate(startA, startB);\n  });\n\n  return (\n    <Results\n      title=\"Upcoming Races\"\n      columns={[\"Race\", \"Race Start\", \"Predicted Time\", \"Your Start\"]}\n    >\n      {sortedResults.map((result) => {\n        const raceStart = getRaceStart(result.raceId);\n\n        return (\n          <tr key={result.id}>\n            <td>\n              <Link to={`/race/${result.raceId}`}>\n                {getRaceName(result.raceId)}\n              </Link>\n            </td>\n            <td>{raceStart && formattedDateWithTime(raceStart)}</td>\n            <td>{result.predictedTime && formatTime(result.predictedTime)}</td>\n            <td>{raceStart && formatDate(raceStart, DEFAULT_TIME_FORMAT)}</td>\n          </tr>\n        );\n      })}\n    </Results>\n  );\n};\n\nexport default UpcomingRaces;\n","import React, { FunctionComponent } from 'react';\n\nimport { useParams } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport NextRace from '../components/races/NextRace';\nimport { getNextRace } from '../components/races/utils';\nimport RunnerDetail from '../components/runners/RunnerDetail';\nimport RunnerResults from '../components/runners/RunnerResults';\nimport UpcomingRaces from '../components/runners/UpcomingRaces';\nimport { getResultsForRunner, RaceResult } from '../dummyData/results';\n\nconst StyledFlexBox = styled(\"div\")`\n  & > * + * {\n    margin-top: ${(props) => props.theme.spacing.medium};\n  }\n  @media screen and (min-width: 680px) {\n    display: flex;\n    justify-content: space-between;\n\n    & > * {\n      margin-top: 0;\n      width: 100%;\n    }\n    & > * + * {\n      margin-left: ${(props) => props.theme.spacing.xLarge};\n    }\n  }\n`;\n\nconst StyledTableWrapper = styled(\"div\")`\n  & > * + * {\n    margin-top: ${(props) => props.theme.spacing.medium};\n  }\n  @media screen and (min-width: 1000px) {\n    display: flex;\n    justify-content: space-between;\n\n    & > * {\n      margin-top: 0;\n      width: 100%;\n    }\n    & > * + * {\n      margin-left: ${(props) => props.theme.spacing.xLarge};\n    }\n  }\n`;\n\nconst RunnerDetailPage: FunctionComponent = () => {\n  const { runnerId } = useParams();\n\n  if (!runnerId) {\n    return null;\n  }\n\n  const results: RaceResult[] = getResultsForRunner(runnerId) || [];\n  const finished = results.filter((result) => !!result.actualTime);\n  const upcoming = results.filter((result) => !result.actualTime);\n  const nextRace = getNextRace();\n\n  return (\n    <>\n      <StyledFlexBox>\n        <RunnerDetail id={runnerId} />\n        {nextRace && (\n          <NextRace\n            raceId={nextRace.id}\n            raceName={nextRace.name}\n            runnerId={runnerId}\n          />\n        )}\n      </StyledFlexBox>\n      <StyledTableWrapper>\n        {upcoming.length > 0 && <UpcomingRaces results={upcoming} />}\n        {finished.length > 0 && (\n          <div style={{ flex: \"1 2 auto\" }}>\n            <RunnerResults results={finished} />\n          </div>\n        )}\n      </StyledTableWrapper>\n    </>\n  );\n};\n\nexport default RunnerDetailPage;\n","import React, { FunctionComponent } from 'react';\n\nimport DatePicker from 'react-datepicker';\nimport { Controller } from 'react-hook-form';\n\nimport {\n  DEFAULT_DATEPICKER_FORMAT,\n  DEFAULT_DATETIMEPICKER_FORMAT,\n  getDateObject,\n  getDateString,\n  getDateTimeString\n} from '../../../../utils/date';\nimport { StyledInput } from '../../../ui/Input';\nimport FieldWrapper from '../../FieldWrapper';\n\nimport 'react-datepicker/dist/react-datepicker.css';\n\ninterface Props {\n  formName: string;\n  fieldName: string;\n  label?: string;\n  defaultValue?: string;\n  error?: string;\n  required?: boolean;\n  includeTime?: boolean;\n}\n\nconst Datepicker: FunctionComponent<Props> = ({\n  formName,\n  fieldName,\n  label,\n  defaultValue,\n  error,\n  required,\n  includeTime,\n}) => {\n  const fieldId = `${formName}_${fieldName}`;\n\n  return (\n    <FieldWrapper fieldId={fieldId} label={label} error={error}>\n      <Controller\n        as={(controllerProps) => {\n          const { value, defaultValue, ...rest } = controllerProps;\n          return (\n            <DatePicker\n              selected={getDateObject(value)}\n              dateFormat={\n                includeTime\n                  ? DEFAULT_DATETIMEPICKER_FORMAT\n                  : DEFAULT_DATEPICKER_FORMAT\n              }\n              customInput={<StyledInput />}\n              showTimeSelect={includeTime}\n              {...rest}\n            />\n          );\n        }}\n        name={fieldName}\n        id={`${formName}_${fieldName}`}\n        defaultValue={defaultValue}\n        rules={{ required }}\n        onChange={([selected]) =>\n          includeTime ? getDateTimeString(selected) : getDateString(selected)\n        }\n      />\n    </FieldWrapper>\n  );\n};\n\nexport default Datepicker;\n","import React, { FunctionComponent } from 'react';\n\nimport { Controller } from 'react-hook-form';\n\nimport { StyledInput } from '../../../ui/Input';\nimport FieldWrapper from '../../FieldWrapper';\n\ninterface Props {\n  formName: string;\n  fieldName: string;\n  label?: string;\n  type?: string;\n  min?: number;\n  max?: number;\n  defaultValue?: number;\n  error?: string;\n  required?: boolean;\n}\n\nconst Number: FunctionComponent<Props> = ({\n  formName,\n  fieldName,\n  label,\n  min,\n  max,\n  defaultValue,\n  error,\n  required,\n}) => {\n  const fieldId = `${formName}_${fieldName}`;\n\n  return (\n    <FieldWrapper fieldId={fieldId} label={label} error={error}>\n      <Controller\n        as={StyledInput}\n        type=\"number\"\n        step=\"0.1\"\n        id={fieldId}\n        min={min}\n        max={max}\n        name={fieldName}\n        defaultValue={defaultValue}\n        rules={{ required }}\n        onChange={([e]) =>\n          !e.target.value ? \"\" : Math.abs(parseFloat(e.target.value))\n        }\n      />\n    </FieldWrapper>\n  );\n};\n\nexport default Number;\n","import React, { FunctionComponent } from 'react';\n\nimport { useFormContext } from 'react-hook-form';\n\nimport { StyledSelect } from '../../../ui/Input';\nimport FieldWrapper from '../../FieldWrapper';\n\nexport interface SelectOption {\n  label?: string;\n  value: string;\n}\n\ninterface Props {\n  formName: string;\n  fieldName: string;\n  label?: string;\n  options: SelectOption[];\n  defaultValue?: string;\n  error?: string;\n  required?: boolean;\n}\n\nconst Select: FunctionComponent<Props> = ({\n  formName,\n  fieldName,\n  label,\n  options,\n  defaultValue,\n  error,\n  required,\n}) => {\n  const { register } = useFormContext();\n  const fieldId = `${formName}_${fieldName}`;\n\n  return (\n    <FieldWrapper fieldId={fieldId} label={label} error={error}>\n      <StyledSelect\n        id={fieldId}\n        name={fieldName}\n        defaultValue={defaultValue}\n        ref={register({ required })}\n      >\n        {options.map((option) => (\n          <option key={option.value} value={option.value || option.label}>\n            {option.value}\n          </option>\n        ))}\n      </StyledSelect>\n    </FieldWrapper>\n  );\n};\n\nexport default Select;\n","import React, { FunctionComponent } from 'react';\n\nimport { useFormContext } from 'react-hook-form';\n\nimport { StyledInput } from '../../../ui/Input';\nimport FieldWrapper from '../../FieldWrapper';\n\ninterface Props {\n  formName: string;\n  fieldName: string;\n  defaultValue?: string;\n  label?: string;\n  error?: string;\n  required?: boolean;\n}\n\nconst Text: FunctionComponent<Props> = ({\n  formName,\n  fieldName,\n  label,\n  error,\n  defaultValue,\n  required,\n}) => {\n  const { register } = useFormContext();\n  const fieldId = `${formName}_${fieldName}`;\n\n  return (\n    <FieldWrapper fieldId={fieldId} label={label} error={error}>\n      <StyledInput\n        type=\"text\"\n        id={fieldId}\n        name={fieldName}\n        defaultValue={defaultValue}\n        ref={register({ required })}\n      />\n    </FieldWrapper>\n  );\n};\n\nexport default Text;\n","import React, { FunctionComponent } from 'react';\n\nimport { useFormContext } from 'react-hook-form';\n\nimport { StyledTextarea } from '../../../ui/Input';\nimport FieldWrapper from '../../FieldWrapper';\n\ninterface Props {\n  formName: string;\n  fieldName: string;\n  label?: string;\n  defaultValue?: string;\n  error?: string;\n  required?: boolean;\n}\n\nconst Textarea: FunctionComponent<Props> = ({\n  formName,\n  fieldName,\n  label,\n  defaultValue,\n  error,\n  required,\n}) => {\n  const { register } = useFormContext();\n  const fieldId = `${formName}_${fieldName}`;\n\n  return (\n    <FieldWrapper fieldId={fieldId} label={label} error={error}>\n      <StyledTextarea\n        id={fieldId}\n        name={fieldName}\n        defaultValue={defaultValue}\n        ref={register({ required })}\n      />\n    </FieldWrapper>\n  );\n};\n\nexport default Textarea;\n","import React, { FunctionComponent, useState } from 'react';\n\nimport { FormContext, useForm } from 'react-hook-form';\nimport styled from 'styled-components';\n\nimport { DistanceUnit, Race } from '../../../dummyData/races';\nimport { getFutureDateWithTime } from '../../../utils/date';\nimport Datepicker from '../../form/fields/Datepicker';\nimport Number from '../../form/fields/Number';\nimport Select from '../../form/fields/Select';\nimport Text from '../../form/fields/Text';\nimport Textarea from '../../form/fields/Textarea';\nimport { OutlineButton, PrimaryButton } from '../../ui/Button';\n\nimport 'react-datepicker/dist/react-datepicker.css';\n\ntype FormData = Partial<Omit<Race, \"id\">>;\n\ninterface Props {\n  seriesId: string;\n}\n\nconst StyledGridContainer = styled(\"div\")`\n  display: grid;\n  grid-gap: ${(props) => props.theme.spacing.medium};\n  grid-template-areas:\n    \"name name\"\n    \"start start\"\n    \"distance unit\"\n    \"desc desc\";\n  grid-template-columns: 1fr 1fr;\n\n  @media screen and (min-width: 480px) {\n    grid-template-areas:\n      \"name name name name\"\n      \"start start distance unit\"\n      \"desc desc desc desc\";\n    grid-template-columns: 1fr 1fr 1fr 1fr;\n  }\n\n  @media screen and (min-width: 800px) {\n    grid-template-areas:\n      \"name name start start\"\n      \"desc desc distance unit\";\n  }\n`;\n\nconst GridAreaName = styled(\"div\")`\n  grid-area: name;\n`;\nconst GridAreaStart = styled(\"div\")`\n  grid-area: start;\n`;\nconst GridAreaDistance = styled(\"div\")`\n  grid-area: distance;\n`;\nconst GridAreaUnit = styled(\"div\")`\n  max-width: 150px;\n  grid-area: unit;\n`;\nconst GridAreaDesc = styled(\"div\")`\n  grid-area: desc;\n`;\n\nconst StyledButtonContainer = styled(\"div\")`\n  display: flex;\n  justify-content: flex-end;\n  margin-top: ${(props) => props.theme.spacing.medium};\n\n  button + button {\n    margin-left: ${(props) => props.theme.spacing.medium};\n  }\n`;\n\nconst NewRace: FunctionComponent<Props> = ({ seriesId }) => {\n  const [visible, setVisible] = useState(false);\n  const form = useForm();\n\n  if (!visible) {\n    return (\n      <PrimaryButton\n        style={{ float: \"right\" }}\n        onClick={() => setVisible(true)}\n      >\n        Add new race\n      </PrimaryButton>\n    );\n  }\n\n  const onSubmit = (data: FormData) => {\n    console.log(data);\n  };\n\n  return (\n    <FormContext {...form}>\n      <form onSubmit={form.handleSubmit(onSubmit)}>\n        <input\n          type=\"hidden\"\n          id=\"newRace_seriesId\"\n          name=\"seriesId\"\n          value={seriesId}\n          ref={form.register({ required: true })}\n        />\n        <StyledGridContainer>\n          <GridAreaName>\n            <Text\n              formName=\"newRace\"\n              fieldName=\"name\"\n              label=\"Race Name\"\n              required\n              error={form.errors.name && \"Please enter a name\"}\n            />\n          </GridAreaName>\n\n          <GridAreaStart>\n            <Datepicker\n              formName=\"newRace\"\n              fieldName=\"startTime\"\n              label=\"Start Time\"\n              defaultValue={getFutureDateWithTime(7, 8)}\n              required\n              error={form.errors.startTime && \"Please enter a start time\"}\n              includeTime\n            />\n          </GridAreaStart>\n\n          <GridAreaDistance>\n            <Number\n              min={0}\n              formName=\"newRace\"\n              fieldName=\"distance\"\n              label=\"Distance\"\n              defaultValue={5}\n              required\n              error={form.errors.distance && \"Please enter a distance\"}\n            />\n          </GridAreaDistance>\n\n          <GridAreaUnit>\n            <Select\n              formName=\"newRace\"\n              fieldName=\"unit\"\n              label=\"Unit\"\n              defaultValue={DistanceUnit.km}\n              options={[{ value: \"km\" }, { value: \"mi\" }]}\n              error={form.errors.unit && \"Please enter a unit\"}\n            />\n          </GridAreaUnit>\n\n          <GridAreaDesc>\n            <Textarea\n              formName=\"newRace\"\n              fieldName=\"description\"\n              label=\"Description\"\n            />\n          </GridAreaDesc>\n        </StyledGridContainer>\n\n        <StyledButtonContainer>\n          <PrimaryButton type=\"submit\">Save</PrimaryButton>\n          <OutlineButton onClick={() => setVisible(false)}>\n            Cancel\n          </OutlineButton>\n        </StyledButtonContainer>\n      </form>\n    </FormContext>\n  );\n};\n\nexport default NewRace;\n","import React, { FunctionComponent } from 'react';\n\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\ninterface Props {\n  linkUrl: string;\n  linkText?: string;\n  title: string;\n  info: string[];\n}\n\nconst StyledListingLink = styled(Link)`\n  display: flex;\n  text-decoration: none;\n  border: ${(props) =>\n    `${props.theme.borders.style} ${props.theme.colors.light}`};\n  border-radius: ${(props) => props.theme.borders.radius};\n  background: #fff;\n  padding: ${(props) => props.theme.spacing.medium};\n\n  div:first-of-type {\n    margin-right: auto;\n  }\n`;\n\nconst StyledListingItem = styled(\"li\")`\n  & + & {\n    margin-top: ${(props) => props.theme.spacing.small};\n  }\n`;\n\nconst StyledListingInfo = styled(\"ul\")`\n  color: ${(props) => props.theme.colors.secondary};\n`;\n\nconst ListingItem: FunctionComponent<Props> = ({\n  linkUrl,\n  linkText = \"Details\",\n  title,\n  info,\n}) => {\n  return (\n    <StyledListingItem>\n      <StyledListingLink to={linkUrl}>\n        <div>\n          <h3>{title}</h3>\n          <StyledListingInfo>\n            {info.map((item) => (\n              <li key={item}>{item}</li>\n            ))}\n          </StyledListingInfo>\n        </div>\n        <span>{linkText} &gt;</span>\n      </StyledListingLink>\n    </StyledListingItem>\n  );\n};\n\nexport default ListingItem;\n","import React, { FunctionComponent } from 'react';\n\nimport { Race } from '../../../dummyData/races';\nimport { DEFAULT_DATETIME_FORMAT, formatDate } from '../../../utils/date';\nimport ListingItem from '../../ui/ListingItem';\n\ninterface Props {\n  races: Race[];\n}\n\nconst RaceList: FunctionComponent<Props> = ({ races }) => {\n  return (\n    <ul>\n      {races.map((race) => (\n        <ListingItem\n          key={race.id}\n          linkUrl={`/race/${race.id}`}\n          linkText={race.results && \"Results\"}\n          title={race.name}\n          info={[\n            formatDate(race.startTime, DEFAULT_DATETIME_FORMAT),\n            `${race.distance} ${race.unit}`,\n          ]}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default RaceList;\n","import allRaces, { Race } from './races';\nimport { RaceResult } from './results';\nimport { getRunnerName } from './runners';\n\nexport interface Series {\n  id: string;\n  name: string;\n  startDate: string;\n  endDate: string;\n  description?: string;\n}\n\nconst allSeries: Series[] = [\n  {\n    id: \"1\",\n    name: \"Winter 2020\",\n    startDate: \"2020-11-01\",\n    endDate: \"2021-02-28\",\n    description:\n      \"Welcome back after Coronavirus! We are excited to be back and out there again.\",\n  },\n  {\n    id: \"2\",\n    name: \"Spring 2021\",\n    startDate: \"2021-03-01\",\n    endDate: \"2021-05-31\",\n  },\n];\n\nexport const getSeriesById = (id: string): Series | undefined =>\n  allSeries.find((element) => element.id === id);\n\nconst getRacesForSeries = (id: string): Race[] =>\n  allRaces.filter((race) => race.seriesId === id);\n\nconst getResultsForSeries = (id: string): RaceResult[] => {\n  let results: RaceResult[] = [];\n  const races: Race[] = getRacesForSeries(id);\n\n  races.forEach((race) => {\n    console.log(race.results && race.isFinished);\n    if (race.results && race.isFinished) {\n      results = results.concat(race.results);\n    }\n  });\n  return results;\n};\n\nexport interface Standing {\n  runnerId: string;\n  runnerName: string;\n  points: number;\n}\n\ninterface Standings {\n  [runnerId: string]: Standing;\n}\n\nexport const getStandingsForSeries = (id: string): Standing[] => {\n  const results: RaceResult[] = getResultsForSeries(id);\n  const standings: Standings = {};\n\n  if (!results.length) {\n    return [];\n  }\n\n  results.forEach((result) => {\n    if (standings[result.runnerId]) {\n      standings[result.runnerId].points += result.points;\n      return;\n    }\n    standings[result.runnerId] = {\n      runnerId: result.runnerId,\n      runnerName: getRunnerName(result.runnerId) || `Runner ${result.runnerId}`,\n      points: result.points,\n    };\n  });\n\n  const standingsArray = [];\n  for (let i in standings) {\n    standingsArray.push(standings[i]);\n  }\n  standingsArray.sort((a: Standing, b: Standing) => b.points - a.points);\n  return standingsArray;\n};\n\nexport default allSeries;\n","import React, { FunctionComponent } from 'react';\n\nimport styled from 'styled-components';\n\nimport { getSeriesById } from '../../../dummyData/series';\nimport { formatDate } from '../../../utils/date';\n\ninterface Props {\n  id: string;\n}\n\nconst StyledSection = styled(\"section\")`\n  & > * + * {\n    margin: ${(props) => props.theme.spacing.small} 0;\n  }\n`;\n\nconst StyledDatesHeader = styled(\"th\")`\n  font-weight: bold;\n  padding-right: ${(props) => props.theme.spacing.medium};\n`;\n\nconst StyledDescription = styled(\"p\")`\n  color: ${(props) => props.theme.colors.secondary};\n`;\n\nconst SeriesDetail: FunctionComponent<Props> = ({ id }) => {\n  const series = getSeriesById(id);\n\n  if (!series) {\n    return null;\n  }\n\n  return (\n    <StyledSection>\n      <header>\n        <h2>{series.name}</h2>\n      </header>\n      <table>\n        <tbody>\n          <tr>\n            <StyledDatesHeader>Start:</StyledDatesHeader>\n            <td>{formatDate(series.startDate)}</td>\n          </tr>\n          <tr>\n            <StyledDatesHeader>End:</StyledDatesHeader>\n            <td>{formatDate(series.endDate)}</td>\n          </tr>\n        </tbody>\n      </table>\n      {series.description && (\n        <StyledDescription>{series.description}</StyledDescription>\n      )}\n    </StyledSection>\n  );\n};\n\nexport default SeriesDetail;\n","import React, { FunctionComponent } from 'react';\n\nimport { getStandingsForSeries, Standing } from '../../../dummyData/series';\nimport Results from '../../Results';\n\ninterface Props {\n  seriesId: string;\n}\n\nconst SeriesStandings: FunctionComponent<Props> = ({ seriesId }) => {\n  const standings: Standing[] = getStandingsForSeries(seriesId);\n\n  if (!standings.length) {\n    return null;\n  }\n\n  return (\n    <Results title=\"Current Standings\" columns={[\"Name\", \"Points\"]}>\n      {standings.map((entry) => (\n        <tr key={entry.runnerId}>\n          <td>{entry.runnerName}</td>\n          <td>{entry.points}</td>\n        </tr>\n      ))}\n    </Results>\n  );\n};\n\nexport default SeriesStandings;\n","import React, { FunctionComponent } from 'react';\n\nimport { Link, useParams } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport NewRace from '../components/races/NewRace';\nimport RaceList from '../components/races/RaceList';\nimport SeriesDetail from '../components/series/SeriesDetail';\nimport SeriesStandings from '../components/series/SeriesStandings';\nimport { getRacesForSeries, Race } from '../dummyData/races';\nimport { isDateInFuture } from '../utils/date';\n\nconst StyledLink = styled(Link)`\n  padding-top: ${(props) => props.theme.spacing.small};\n  padding-bottom: ${(props) => props.theme.spacing.small};\n  text-decoration: none;\n  display: block;\n  margin-bottom: ${(props) => props.theme.spacing.small};\n`;\n\nconst StyledFlexBox = styled(\"div\")`\n  & > * + * {\n    margin-top: ${(props) => props.theme.spacing.medium};\n  }\n  @media screen and (min-width: 800px) {\n    display: flex;\n    justify-content: space-between;\n\n    & > * {\n      margin-top: 0;\n      width: 100%;\n    }\n    & > * + * {\n      margin-left: ${(props) => props.theme.spacing.xLarge};\n    }\n  }\n`;\n\nconst StyledFlexContainer = styled(\"div\")`\n  & > * + * {\n    margin-top: ${(props) => props.theme.spacing.medium};\n  }\n`;\n\nconst SeriesDetailPage: FunctionComponent = () => {\n  const { seriesId } = useParams();\n\n  if (!seriesId) {\n    return null;\n  }\n\n  const seriesRaces: Race[] = getRacesForSeries(seriesId);\n  const upcomingRaces: Race[] = seriesRaces.filter(\n    (race) => isDateInFuture(race.startTime) && !race.isFinished\n  );\n  const pastRaces: Race[] = seriesRaces.filter(\n    (race) => race.isFinished || !isDateInFuture(race.startTime)\n  );\n\n  return (\n    <>\n      <nav>\n        <StyledLink to=\"/series\">&lt; Back to All Series</StyledLink>\n      </nav>\n\n      <SeriesDetail id={seriesId} />\n\n      <StyledFlexBox>\n        <StyledFlexContainer>\n          {upcomingRaces.length > 0 && (\n            <StyledFlexContainer>\n              <header>\n                <h3 style={{ display: \"inline\" }}>Upcoming Races</h3>\n                <NewRace seriesId={seriesId} />\n              </header>\n              <RaceList races={upcomingRaces} />\n            </StyledFlexContainer>\n          )}\n          {pastRaces.length > 0 && (\n            <StyledFlexContainer>\n              <header>\n                <h3>Past Races</h3>\n              </header>\n              <RaceList races={pastRaces} />\n            </StyledFlexContainer>\n          )}\n        </StyledFlexContainer>\n        <SeriesStandings seriesId={seriesId} />\n      </StyledFlexBox>\n    </>\n  );\n};\n\nexport default SeriesDetailPage;\n","import React, { FunctionComponent, useState } from 'react';\n\nimport { FormContext, useForm } from 'react-hook-form';\nimport styled from 'styled-components';\n\nimport { Series } from '../../../dummyData/series';\nimport { getFutureDate, getToday } from '../../../utils/date';\nimport Datepicker from '../../form/fields/Datepicker';\nimport Text from '../../form/fields/Text';\nimport Textarea from '../../form/fields/Textarea';\nimport { OutlineButton, PrimaryButton } from '../../ui/Button';\n\nimport 'react-datepicker/dist/react-datepicker.css';\n\ntype FormData = Partial<Omit<Series, \"id\">>;\n\nconst StyledGridContainer = styled(\"div\")`\n  display: grid;\n  grid-gap: ${(props) => props.theme.spacing.medium};\n  grid-template-columns: 1fr 1fr;\n\n  @media screen and (min-width: 800px) {\n    grid-template-columns: 1fr 1fr 1fr 1fr;\n  }\n`;\n\nconst GridAreaLarge = styled(\"div\")`\n  grid-column-start: 1;\n  grid-column-end: 3;\n`;\n\nconst StyledButtonContainer = styled(\"div\")`\n  display: flex;\n  justify-content: flex-end;\n  margin-top: ${(props) => props.theme.spacing.medium};\n\n  button + button {\n    margin-left: ${(props) => props.theme.spacing.medium};\n  }\n`;\n\nconst NewSeries: FunctionComponent = () => {\n  const [visible, setVisible] = useState(false);\n  const form = useForm();\n\n  if (!visible) {\n    return (\n      <PrimaryButton onClick={() => setVisible(true)}>\n        Add new series\n      </PrimaryButton>\n    );\n  }\n\n  const onSubmit = (data: FormData) => {\n    console.log(data);\n  };\n\n  return (\n    <FormContext {...form}>\n      <form onSubmit={form.handleSubmit(onSubmit)}>\n        <StyledGridContainer>\n          <GridAreaLarge>\n            <Text\n              formName=\"newSeries\"\n              fieldName=\"name\"\n              label=\"Series Name\"\n              required\n              error={form.errors.name && \"Please enter a name\"}\n            />\n          </GridAreaLarge>\n\n          <Datepicker\n            formName=\"newSeries\"\n            fieldName=\"startDate\"\n            label=\"Start Date\"\n            defaultValue={getToday()}\n            required\n            error={form.errors.startDate && \"Please enter a start date\"}\n          />\n\n          <Datepicker\n            formName=\"newSeries\"\n            fieldName=\"endDate\"\n            label=\"End Date\"\n            defaultValue={getFutureDate(3, \"month\")}\n            required\n            error={form.errors.endDate && \"Please enter a start date\"}\n          />\n\n          <GridAreaLarge>\n            <Textarea\n              formName=\"newSeries\"\n              fieldName=\"description\"\n              label=\"Description\"\n            />\n          </GridAreaLarge>\n        </StyledGridContainer>\n\n        <StyledButtonContainer>\n          <PrimaryButton type=\"submit\">Save</PrimaryButton>\n          <OutlineButton onClick={() => setVisible(false)}>\n            Cancel\n          </OutlineButton>\n        </StyledButtonContainer>\n      </form>\n    </FormContext>\n  );\n};\n\nexport default NewSeries;\n","import React, { FunctionComponent } from 'react';\n\nimport allSeries from '../../../dummyData/series';\nimport { formatDate } from '../../../utils/date';\nimport ListingItem from '../../ui/ListingItem';\n\nconst SeriesList: FunctionComponent = () => {\n  return (\n    <section>\n      <header>\n        <h2>All Series</h2>\n      </header>\n      <ul>\n        {allSeries.map((series) => (\n          <ListingItem\n            key={series.id}\n            linkUrl={`/series/${series.id}`}\n            title={series.name}\n            info={[\n              `${formatDate(series.startDate)} - ${formatDate(series.endDate)}`,\n            ]}\n          />\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nexport default SeriesList;\n","import React, { FunctionComponent } from 'react';\n\nimport NewSeries from '../components/series/NewSeries';\nimport SeriesList from '../components/series/SeriesList';\n\nconst SeriesListPage: FunctionComponent = () => {\n  return (\n    <>\n      <SeriesList />\n      <NewSeries />\n    </>\n  );\n};\n\nexport default SeriesListPage;\n","import React, { FunctionComponent } from 'react';\n\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport styled, { ThemeProvider } from 'styled-components';\n\nimport SiteHeader from './components/SiteHeader';\nimport GlobalStyles from './design/globalStyle';\nimport theme from './design/theme';\nimport Home from './pages/HomePage';\nimport Login from './pages/LoginPage';\nimport RaceDetail from './pages/RaceDetailPage';\nimport RunnerDetail from './pages/RunnerDetailPage';\nimport SeriesDetail from './pages/SeriesDetailPage';\nimport SeriesList from './pages/SeriesListPage';\nimport routes, { ROUTER_BASE } from './routing/routes';\n\nconst StyledMain = styled(\"main\")`\n  padding: ${(props) => props.theme.spacing.medium};\n\n  & > *:not(nav) + * {\n    margin-top: ${(props) => props.theme.spacing.xLarge};\n  }\n`;\n\nconst App: FunctionComponent = () => {\n  return (\n    <ThemeProvider theme={theme}>\n      <GlobalStyles />\n      <Router basename={ROUTER_BASE}>\n        <SiteHeader />\n        <StyledMain>\n          <Switch>\n            <Route path={routes.HOME} exact>\n              <Home />\n            </Route>\n            <Route path={routes.SERIES_LIST} exact>\n              <SeriesList />\n            </Route>\n            <Route path={routes.SERIES_DETAIL}>\n              <SeriesDetail />\n            </Route>\n            <Route path={routes.RACE_DETAIL}>\n              <RaceDetail />\n            </Route>\n            <Route path={routes.RUNNER_DETAIL}>\n              <RunnerDetail />\n            </Route>\n\n            <Route path={routes.LOGIN} exact>\n              <Login />\n            </Route>\n          </Switch>\n        </StyledMain>\n      </Router>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}